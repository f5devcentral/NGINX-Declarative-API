# NGINX Declarative API - https://github.com/f5devcentral/NGINX-Declarative-API/

# Main variables
[main]
banner = "NGINX Declarative API"
version = "5.4.0"
url = "https://github.com/f5devcentral/NGINX-Declarative-API"

# Templates
[templates]
root_dir = "../templates"
nginxmain = "nginx-conf/nginx.conf"
mimetypes = "nginx-conf/mime.types"
license = "nginx-conf/license-key.tmpl"

httpconf = "http.tmpl"
apigwconf = "apigateway.tmpl"
visibility_root = "visibility"
streamconf = "stream.tmpl"
configmap = "configmap.tmpl"
resolver = "misc/resolver.tmpl"

server_http = "misc/server-http.tmpl"
server_stream = "misc/server-stream.tmpl"

upstream_http = "misc/upstream-http.tmpl"
upstream_stream = "misc/upstream-stream.tmpl"

auth_client_root = "authn/client"
auth_server_root = "authn/server"

authz_client_root = "authz/client"

acme_issuer = "misc/acme.tmpl"

devportal_root = "devportal"
misc_root = "misc"

# NGINX Declarative API Server
[apiserver]
host = "0.0.0.0"
port = 5000

# Redis backend
[redis]
host = "redis"
port = 6379

# Redocly devportal helper
[devportal]
host = "devportal"
port = 5000
uri = "/v1/devportal"

# NGINX App Protect
[nap]
cookie_protection_seed = "tBjtd3WXKqoKp27pfEBc"
compiler_host = "nap-compiler"
compiler_port = 5000
compiler_uri = "/v1/compile/policy"

# Staged configuration directories
[nms]
config_dir = '/etc/nginx'
certs_dir = '/etc/nginx/ssl'
acme_dir = '/etc/nginx/acme'
apigw_dir = '/etc/nginx/apigateway'
visibility_dir = '/etc/nginx/visibility'
devportal_dir = '/etc/nginx/devportal'
auth_client_dir = '/etc/nginx/authn/client'
auth_server_dir = '/etc/nginx/authn/server'
authz_client_dir = '/etc/nginx/authz/client'
njs_dir = '/etc/nginx/njs'
resolver_dir = '/etc/nginx/resolvers'
server_http_dir = '/etc/nginx/servers/http'
upstream_http_dir = '/etc/nginx/upstreams/http'
server_stream_dir = '/etc/nginx/servers/stream'
upstream_stream_dir = '/etc/nginx/upstreams/stream'

# Time (in seconds) to wait to get status after committing a staged config
staged_config_publish_waittime = 2

# Time (in seconds) to wait between two subsequent asynchronous submissions publish requests through PATCH
asynchronous_publish_waittime = 30

# NGINX App Protect support
nap_policies_dir = '/etc/nginx/waf/policies'
nap_logformats_dir = '/etc/nginx/waf/logformats'
nap_logformats_template = "logformat.tmpl"
nap_policies_dir_pum = '/etc/nms'
nap_logformats_dir_pum = '/etc/nms'

# Staged configuration filenames
staged_config_http_filename = 'conf.d/services.conf'
staged_config_stream_filename = 'stream-conf.d/services.conf'