{
	"info": {
		"_postman_id": "1531f571-51df-4881-8819-3903fda8c5fa",
		"name": "NGINX Declarative API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1667416"
	},
	"item": [
		{
			"name": "v1 - deprecated",
			"item": [
				{
					"name": "Standard",
					"item": [
						{
							"name": "Basic - LB",
							"item": [
								{
									"name": "Basic - LB - plaintext output",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"plaintext\"\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"udp\"\n                    },\n                    \"upstream\": \"l4_upstream\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v1",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Basic - LB - json b64 encoded output",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"json\"\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"udp\"\n                    },\n                    \"upstream\": \"l4_upstream\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v1",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Basic - LB - ConfigMap output",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"configmap\",\n        \"configmap\": {\n            \"name\": \"nginx.test\",\n            \"filename\": \"testservice.conf\",\n            \"namespace\": \"test-namespace\"\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"udp\"\n                    },\n                    \"upstream\": \"l4_upstream\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v1",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Basic - LB - HTTP output",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"http\",\n        \"http\": {\n            \"url\": \"http://192.168.1.18:8080/path/service\"\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"udp\"\n                    },\n                    \"upstream\": \"l4_upstream\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v1",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Basic - LB - NMS output",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\"\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"udp\"\n                    },\n                    \"upstream\": \"l4_upstream\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v1",
												"config"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Advanced",
							"item": [
								{
									"name": "Advanced LB - plaintext output",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"plaintext\"\n    },\n   \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"tcp\",\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"upstream\": \"l4_upstream\",\n                    \"snippet\": \"IyBUaGlzIGlzIGEgbDQgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/test\",\n                            \"urimatch\": \"exact\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true,\n                                \"uri\": \"/healthcheck\",\n                                \"interval\": 5,\n                                \"fails\": 3,\n                                \"passes\": 2\n                            },\n                            \"rate_limit\": {\n                                \"profile\": \"test_ratelimit\",\n                                \"httpcode\": 429,\n                                \"burst\": 10,\n                                \"delay\": 3\n                            },\n                            \"app_protect\": {\n                                \"enabled\": true,\n                                \"policy\": \"test_policy\",\n                                \"log\": {\n                                    \"profile_name\": \"okta\",\n                                    \"enabled\": true,\n                                    \"destination\": \"192.168.1.5:514\"\n                                }\n                            },\n                            \"snippet\": \"IyBUaGlzIGlzIGEgbG9jYXRpb24gc25pcHBldCBjb21tZW50Cg==\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"test_policy\",\n                        \"log\": {\n                            \"profile_name\": \"default\",\n                            \"enabled\": true,\n                            \"destination\": \"192.168.1.5:514\"\n                        }\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgc2VydmVyIHNuaXBwZXQgY29tbWVudAo=\"\n                },\n                {\n                    \"names\": [\n                        \"server_443\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"upstream\": \"http://test_upstream\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\",\n                            \"weight\": 5,\n                            \"max_fails\": 2,\n                            \"fail_timeout\": \"30s\",\n                            \"max_conns\": 3,\n                            \"slow_start\": \"30s\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\",\n                            \"backup\": true\n                        }\n                    ],\n                    \"sticky\": {\n                        \"cookie\": \"cookie_name\",\n                        \"expires\": \"1h\",\n                        \"domain\": \".testserver\",\n                        \"path\": \"/\"\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"rate_limit\": [\n                {\n                    \"name\": \"test_ratelimit\",\n                    \"key\": \"$binary_remote_addr\",\n                    \"size\": \"10m\",\n                    \"rate\": \"1r/s\"\n                }\n            ],\n            \"maps\": [\n                {\n                    \"match\": \"$host$request_uri\",\n                    \"variable\": \"$backend\",\n                    \"entries\": [\n                        {\n                            \"key\": \"www.test.lab/app1/\",\n                            \"keymatch\": \"iregex\",\n                            \"value\": \"upstream_1\"\n                        },\n                        {\n                            \"key\": \"(.*).test.lab/app2/\",\n                            \"keymatch\": \"regex\",\n                            \"value\": \"upstream_2\"\n                        }\n                    ]\n                }\n            ],\n            \"nginx_plus_api\": {\n                \"write\": true,\n                \"listen\": \"127.0.0.1:8080\",\n                \"allow_acl\": \"0.0.0.0/0\"\n            },\n            \"snippet\": \"IyBUaGlzIGlzIGEgSFRUUCBzbmlwcGV0IGNvbW1lbnQK\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v1",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Advanced LB - json b64 encoded output",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"json\"\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"tcp\",\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"upstream\": \"l4_upstream\",\n                    \"snippet\": \"IyBUaGlzIGlzIGEgbDQgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/test\",\n                            \"urimatch\": \"exact\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true,\n                                \"uri\": \"/healthcheck\",\n                                \"interval\": 5,\n                                \"fails\": 3,\n                                \"passes\": 2\n                            },\n                            \"rate_limit\": {\n                                \"profile\": \"test_ratelimit\",\n                                \"httpcode\": 429,\n                                \"burst\": 10,\n                                \"delay\": 3\n                            },\n                            \"app_protect\": {\n                                \"enabled\": true,\n                                \"policy\": \"test_policy\",\n                                \"log\": {\n                                    \"profile_name\": \"okta\",\n                                    \"enabled\": true,\n                                    \"destination\": \"192.168.1.5:514\"\n                                }\n                            },\n                            \"snippet\": \"IyBUaGlzIGlzIGEgbG9jYXRpb24gc25pcHBldCBjb21tZW50Cg==\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"test_policy\",\n                        \"log\": {\n                            \"profile_name\": \"default\",\n                            \"enabled\": true,\n                            \"destination\": \"192.168.1.5:514\"\n                        }\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgc2VydmVyIHNuaXBwZXQgY29tbWVudAo=\"\n                },\n                {\n                    \"names\": [\n                        \"server_443\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"upstream\": \"http://test_upstream\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\",\n                            \"weight\": 5,\n                            \"max_fails\": 2,\n                            \"fail_timeout\": \"30s\",\n                            \"max_conns\": 3,\n                            \"slow_start\": \"30s\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\",\n                            \"backup\": true\n                        }\n                    ],\n                    \"sticky\": {\n                        \"cookie\": \"cookie_name\",\n                        \"expires\": \"1h\",\n                        \"domain\": \".testserver\",\n                        \"path\": \"/\"\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"rate_limit\": [\n                {\n                    \"name\": \"test_ratelimit\",\n                    \"key\": \"$binary_remote_addr\",\n                    \"size\": \"10m\",\n                    \"rate\": \"1r/s\"\n                }\n            ],\n            \"maps\": [\n                {\n                    \"match\": \"$host$request_uri\",\n                    \"variable\": \"$backend\",\n                    \"entries\": [\n                        {\n                            \"key\": \"www.test.lab/app1/\",\n                            \"keymatch\": \"iregex\",\n                            \"value\": \"upstream_1\"\n                        },\n                        {\n                            \"key\": \"(.*).test.lab/app2/\",\n                            \"keymatch\": \"regex\",\n                            \"value\": \"upstream_2\"\n                        }\n                    ]\n                }\n            ],\n            \"nginx_plus_api\": {\n                \"write\": true,\n                \"listen\": \"127.0.0.1:8080\",\n                \"allow_acl\": \"0.0.0.0/0\"\n            },\n            \"snippet\": \"IyBUaGlzIGlzIGEgSFRUUCBzbmlwcGV0IGNvbW1lbnQK\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v1",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Advanced LB - ConfigMap output",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"configmap\",\n        \"configmap\": {\n            \"name\": \"nginx.test\",\n            \"filename\": \"testservice.conf\",\n            \"namespace\": \"test-namespace\"\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"tcp\",\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"upstream\": \"l4_upstream\",\n                    \"snippet\": \"IyBUaGlzIGlzIGEgbDQgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/test\",\n                            \"urimatch\": \"exact\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true,\n                                \"uri\": \"/healthcheck\",\n                                \"interval\": 5,\n                                \"fails\": 3,\n                                \"passes\": 2\n                            },\n                            \"rate_limit\": {\n                                \"profile\": \"test_ratelimit\",\n                                \"httpcode\": 429,\n                                \"burst\": 10,\n                                \"delay\": 3\n                            },\n                            \"app_protect\": {\n                                \"enabled\": true,\n                                \"policy\": \"test_policy\",\n                                \"log\": {\n                                    \"profile_name\": \"okta\",\n                                    \"enabled\": true,\n                                    \"destination\": \"192.168.1.5:514\"\n                                }\n                            },\n                            \"snippet\": \"IyBUaGlzIGlzIGEgbG9jYXRpb24gc25pcHBldCBjb21tZW50Cg==\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"test_policy\",\n                        \"log\": {\n                            \"profile_name\": \"default\",\n                            \"enabled\": true,\n                            \"destination\": \"192.168.1.5:514\"\n                        }\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgc2VydmVyIHNuaXBwZXQgY29tbWVudAo=\"\n                },\n                {\n                    \"names\": [\n                        \"server_443\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"upstream\": \"http://test_upstream\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\",\n                            \"weight\": 5,\n                            \"max_fails\": 2,\n                            \"fail_timeout\": \"30s\",\n                            \"max_conns\": 3,\n                            \"slow_start\": \"30s\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\",\n                            \"backup\": true\n                        }\n                    ],\n                    \"sticky\": {\n                        \"cookie\": \"cookie_name\",\n                        \"expires\": \"1h\",\n                        \"domain\": \".testserver\",\n                        \"path\": \"/\"\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"rate_limit\": [\n                {\n                    \"name\": \"test_ratelimit\",\n                    \"key\": \"$binary_remote_addr\",\n                    \"size\": \"10m\",\n                    \"rate\": \"1r/s\"\n                }\n            ],\n            \"maps\": [\n                {\n                    \"match\": \"$host$request_uri\",\n                    \"variable\": \"$backend\",\n                    \"entries\": [\n                        {\n                            \"key\": \"www.test.lab/app1/\",\n                            \"keymatch\": \"iregex\",\n                            \"value\": \"upstream_1\"\n                        },\n                        {\n                            \"key\": \"(.*).test.lab/app2/\",\n                            \"keymatch\": \"regex\",\n                            \"value\": \"upstream_2\"\n                        }\n                    ]\n                }\n            ],\n            \"nginx_plus_api\": {\n                \"write\": true,\n                \"listen\": \"127.0.0.1:8080\",\n                \"allow_acl\": \"0.0.0.0/0\"\n            },\n            \"snippet\": \"IyBUaGlzIGlzIGEgSFRUUCBzbmlwcGV0IGNvbW1lbnQK\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v1",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Advanced LB - HTTP output",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"http\",\n        \"http\": {\n            \"url\": \"http://192.168.1.18:8080/path/service\"\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"tcp\",\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"upstream\": \"l4_upstream\",\n                    \"snippet\": \"IyBUaGlzIGlzIGEgbDQgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/test\",\n                            \"urimatch\": \"exact\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true,\n                                \"uri\": \"/healthcheck\",\n                                \"interval\": 5,\n                                \"fails\": 3,\n                                \"passes\": 2\n                            },\n                            \"rate_limit\": {\n                                \"profile\": \"test_ratelimit\",\n                                \"httpcode\": 429,\n                                \"burst\": 10,\n                                \"delay\": 3\n                            },\n                            \"app_protect\": {\n                                \"enabled\": true,\n                                \"policy\": \"test_policy\",\n                                \"log\": {\n                                    \"profile_name\": \"okta\",\n                                    \"enabled\": true,\n                                    \"destination\": \"192.168.1.5:514\"\n                                }\n                            },\n                            \"snippet\": \"IyBUaGlzIGlzIGEgbG9jYXRpb24gc25pcHBldCBjb21tZW50Cg==\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"test_policy\",\n                        \"log\": {\n                            \"profile_name\": \"default\",\n                            \"enabled\": true,\n                            \"destination\": \"192.168.1.5:514\"\n                        }\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgc2VydmVyIHNuaXBwZXQgY29tbWVudAo=\"\n                },\n                {\n                    \"names\": [\n                        \"server_443\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"upstream\": \"http://test_upstream\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\",\n                            \"weight\": 5,\n                            \"max_fails\": 2,\n                            \"fail_timeout\": \"30s\",\n                            \"max_conns\": 3,\n                            \"slow_start\": \"30s\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\",\n                            \"backup\": true\n                        }\n                    ],\n                    \"sticky\": {\n                        \"cookie\": \"cookie_name\",\n                        \"expires\": \"1h\",\n                        \"domain\": \".testserver\",\n                        \"path\": \"/\"\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"rate_limit\": [\n                {\n                    \"name\": \"test_ratelimit\",\n                    \"key\": \"$binary_remote_addr\",\n                    \"size\": \"10m\",\n                    \"rate\": \"1r/s\"\n                }\n            ],\n            \"maps\": [\n                {\n                    \"match\": \"$host$request_uri\",\n                    \"variable\": \"$backend\",\n                    \"entries\": [\n                        {\n                            \"key\": \"www.test.lab/app1/\",\n                            \"keymatch\": \"iregex\",\n                            \"value\": \"upstream_1\"\n                        },\n                        {\n                            \"key\": \"(.*).test.lab/app2/\",\n                            \"keymatch\": \"regex\",\n                            \"value\": \"upstream_2\"\n                        }\n                    ]\n                }\n            ],\n            \"nginx_plus_api\": {\n                \"write\": true,\n                \"listen\": \"127.0.0.1:8080\",\n                \"allow_acl\": \"0.0.0.0/0\"\n            },\n            \"snippet\": \"IyBUaGlzIGlzIGEgSFRUUCBzbmlwcGV0IGNvbW1lbnQK\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v1",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Advanced LB - NMS output",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ],\n            \"certificates\": [\n                {\n                    \"type\": \"certificate\",\n                    \"name\": \"test_cert\",\n                    \"contents\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSVENDQWkwQ0ZDQUVQMGU3U3A4MlFudE5xZFZOQXB3b1VOeDJNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1GOHgKQ3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSURBVk5hV3hoYmpFT01Bd0dBMVVFQnd3RlRXbHNZVzR4RlRBVApCZ05WQkFvTURGUmxjM1FnUTI5dGNHRnVlVEVaTUJjR0ExVUVBd3dRZEdWemRDNWpiMjF3WVc1NUxteGhZakFlCkZ3MHlNakExTVRZd056VTROVGRhRncwek1qQTFNVE13TnpVNE5UZGFNRjh4Q3pBSkJnTlZCQVlUQWtsVU1RNHcKREFZRFZRUUlEQVZOYVd4aGJqRU9NQXdHQTFVRUJ3d0ZUV2xzWVc0eEZUQVRCZ05WQkFvTURGUmxjM1FnUTI5dApjR0Z1ZVRFWk1CY0dBMVVFQXd3UWRHVnpkQzVqYjIxd1lXNTVMbXhoWWpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCCkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1kaE02Yy8wdGpzT0lmTTlBMjNzQzJJK0dtZzd3NUJVbWRHQjlNc0pTa0IKZ3BQajZ6OTBHbFc3d0dRc25CQ0NNdmtwTzMzRVY0MWlPa0MzYnU3Ym50NXVkTi9kbEg0ZndnMzYrUWdpMnlTegpuVW5OUUNOQkRJTWNRcmFvcjlKdG5SWDAzYXVpY3ZSeEpGQ2lvL1gvNjNIMUFHZERKaFNWaUxRVjlqVjZhNlpNCjFMNDljUVVwekhSSlpPRGV1MnNIc2kxR0JuLzVnUStXSVR2RFp3SGQ0TjJGTkhmOXlJS1ZVQmkzVVRXQmpRRS8KVm15dkZVcmVBYnlldElzbEcvZVVVRkUyeFFhSzFXS2dMVUJrOXRnc3pycXFkNW11Y25ESmZ1elhkclArc1U2YQpkL1kvZVgxN3RKaG5xa25MZ25mVG91NTVLak9XdE93ZzN4OWt5amQ5bkFNQ0F3RUFBVEFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQXhyY1ppemR0L0wxWjVYQnE2R0djWTNSbzB0ZEdjdGZHZ0NsdjRvRzVTaE5BQmRhQTIvQ1YKVkE0TGtkb3JYV09hQWNGaWxpcFBlN0tGYVdIZ3EwZ3Q0eEt4LzlkOVZIcU5OY2srTlk0U3dHNDNrWjMyQWQ0QwpnUlowNEVhc1g3aG5wOG13alpLQ0FIWkpGK2krdC9sSFJOaEFDUzFGMHpyQmMrK3NUek5RK1dnTnVEbzN2OWkyCkNoZ1BRbEtBc3M0enM1NGE1RmJOTDJkWWJqNGRraXhJNDMwbU15dXg4SGJPUWFzVm9DVnpXcWtLa29RN25kdUgKRVBrWU0zRy9yVXRQZzhOVU1VVnlkdDFVbnlkb3c4cnhYYjZiQzYreTFQc2FrWHhSdW10ZFlnbDN3UWtJaitGUAoxVFgwSU9qKzdNZnR0cWdxemFhUm85V0s1Y3dpZTBlRGZBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"\n                },\n                {\n                    \"type\": \"key\",\n                    \"name\": \"test_key\",\n                    \"contents\": \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRREhZVE9uUDlMWTdEaUgKelBRTnQ3QXRpUGhwb084T1FWSm5SZ2ZUTENVcEFZS1Q0K3MvZEJwVnU4QmtMSndRZ2pMNUtUdDl4RmVOWWpwQQp0Mjd1MjU3ZWJuVGYzWlIrSDhJTit2a0lJdHNrczUxSnpVQWpRUXlESEVLMnFLL1NiWjBWOU4ycm9uTDBjU1JRCm9xUDEvK3R4OVFCblF5WVVsWWkwRmZZMWVtdW1UTlMrUFhFRktjeDBTV1RnM3J0ckI3SXRSZ1ovK1lFUGxpRTcKdzJjQjNlRGRoVFIzL2NpQ2xWQVl0MUUxZ1kwQlAxWnNyeFZLM2dHOG5yU0xKUnYzbEZCUk5zVUdpdFZpb0MxQQpaUGJZTE02NnFuZVpybkp3eVg3czEzYXovckZPbW5mMlAzbDllN1NZWjZwSnk0SjMwNkx1ZVNvemxyVHNJTjhmClpNbzNmWndEQWdNQkFBRUNnZ0VBQUljZWhSMERVRlZaa1pudVhTdzJhRnVtM2pGYmcyMEhCNnZkdFgyQzA4ZUYKMUthYjhmQzJFN0kyUTc4ZUhNZ3JQZVZuUmlyclVsWHZieGI4S0dpWkg1b1pwOFgwR1oxU2FqREVOMEg5emUvcwpBSmY4c1daSzJEYkJ0ajRHTmlVazR6djNQeXMwYXVvWWx1TmtJbkpRbDZYNGVLWkIwVjBYbW54NEJpejNGVVVVCjliUlRlM09FTFYwNDVMUkt3eWRnOWFmQnZQcEZIQkdIcVBxRFptTHl6TWVNQjVHVmJBOEd2NVE4QS96WFdtcnoKSVE0QVlZeVU1dlZXKzBya0NRRVluR1c5QlNiYjB6d3prdVBKa1NRODhzOHV0T2RmMU5SOGZBVkdnazhXVHZXagpRVnlKVzV6Snc2SzlsS0w2Sy94VDlKOUZiWWpQWFZDd21jaDMweUpPWVFLQmdRRFI3NmpkRnhzMTZKMXR3U3Z0CkJBRWMzOVFCeTBPNmNQSWJLV1hYOE1FRDB1R0psYUJRSWE5WUdoS3lGYU5SRjJVTUJYWHVZVll1U2Rrb1lxMGwKNVBndmJoNVYxQjFVYVR5WG0rUTlBcWFsc3pSQW5TdXFKcytsVzJDaE5ISDRZQjlnKzQrZFlmcURuMWdTUlkzMgpvZVlrV05aQ0VHT0c0QUNtSTJXZU8wWklyd0tCZ1FEeklKTFRzQnJ3MldlMW8zOVd2RkpIaFF6RDRNU2ppSHovClRSZS9VV2ZEWlB1TzZmcXBHNXozbk9oWkVsUEJuRktKNTZQekZhemxJQ01xdmpoRHZtTkpmb1J3Y084cnVhOG8KenVzb2N0bk15UzFPOExSMDltZFlPdVhyY0RXamZ5QTdlZHBiWUVSTGYzQXJkL2VJZko0RTJ3SGI3bVhMRHgxbApRdnBjR3VsTzdRS0JnREgzK0ZwL2VIT1JaWDlOUGxaUTRLN3R1N21kbHdaV2dkbmpOYUY3WllXeWVRcFZlZTM0CnhwS1N5aVpuTGhOTUhUb0tSckt4cW1Da0pUTU9vYVhtWlFodERuMWhXb1hQOHFNbmNPRHdzNWUzR3RYU1V5VlIKelpUUE5pWElwT1A0aFIrQllRS1Y0cG5Yb0kvZ3pGU0szb3VDTmFWTjMxS29HSjl5eDJvdE02SnpBb0dBTDZicAp3RDNhK2V2U2pPSlB1Z05OS1NGbHdCcVV6K3lYZXo1ejhoYVZmTkdWRUl6QmlWV1ZMVjcrbHo2bFZlUTZ0VGJHCmhvVndEclIrMEFqYVpFU3pseHNLQURQU1hNS1hGeXQvSWIxby9OOU5WeFNNZWdRMWV6Q0lFZDQ3VlNFOGd3dSsKQlh6WHhlaGpadEdyblgrM1JRSmIyZXhlM1M3SU55bXFnbFR2OTMwQ2dZQkpsK2EvRHN0OE5iVlEvRHpuei93VgpPSDhKUENOS05EQm1WS3ZUVTNiQy9YQW8rQm42a2crbDZqczY5RkZlWHIvOGlHL25sTW9QQTlnT2Zxb3BmZ3AzClpTZFE1RlMrQk9kdFQrT2JacTBlcmxJSlk0dW9na3VEV2NpLzNaeExkYnNQUnhJS2c4MmdYRU9DN1dnb3VsUVQKV1doVUpSeGpJdGx6eUdseHhvb2lqQT09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\"\n                },\n                {\n                    \"type\": \"chain\",\n                    \"name\": \"test_chain\",\n                    \"contents\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSVENDQWkwQ0ZDQUVQMGU3U3A4MlFudE5xZFZOQXB3b1VOeDJNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1GOHgKQ3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSURBVk5hV3hoYmpFT01Bd0dBMVVFQnd3RlRXbHNZVzR4RlRBVApCZ05WQkFvTURGUmxjM1FnUTI5dGNHRnVlVEVaTUJjR0ExVUVBd3dRZEdWemRDNWpiMjF3WVc1NUxteGhZakFlCkZ3MHlNakExTVRZd056VTROVGRhRncwek1qQTFNVE13TnpVNE5UZGFNRjh4Q3pBSkJnTlZCQVlUQWtsVU1RNHcKREFZRFZRUUlEQVZOYVd4aGJqRU9NQXdHQTFVRUJ3d0ZUV2xzWVc0eEZUQVRCZ05WQkFvTURGUmxjM1FnUTI5dApjR0Z1ZVRFWk1CY0dBMVVFQXd3UWRHVnpkQzVqYjIxd1lXNTVMbXhoWWpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCCkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1kaE02Yy8wdGpzT0lmTTlBMjNzQzJJK0dtZzd3NUJVbWRHQjlNc0pTa0IKZ3BQajZ6OTBHbFc3d0dRc25CQ0NNdmtwTzMzRVY0MWlPa0MzYnU3Ym50NXVkTi9kbEg0ZndnMzYrUWdpMnlTegpuVW5OUUNOQkRJTWNRcmFvcjlKdG5SWDAzYXVpY3ZSeEpGQ2lvL1gvNjNIMUFHZERKaFNWaUxRVjlqVjZhNlpNCjFMNDljUVVwekhSSlpPRGV1MnNIc2kxR0JuLzVnUStXSVR2RFp3SGQ0TjJGTkhmOXlJS1ZVQmkzVVRXQmpRRS8KVm15dkZVcmVBYnlldElzbEcvZVVVRkUyeFFhSzFXS2dMVUJrOXRnc3pycXFkNW11Y25ESmZ1elhkclArc1U2YQpkL1kvZVgxN3RKaG5xa25MZ25mVG91NTVLak9XdE93ZzN4OWt5amQ5bkFNQ0F3RUFBVEFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQXhyY1ppemR0L0wxWjVYQnE2R0djWTNSbzB0ZEdjdGZHZ0NsdjRvRzVTaE5BQmRhQTIvQ1YKVkE0TGtkb3JYV09hQWNGaWxpcFBlN0tGYVdIZ3EwZ3Q0eEt4LzlkOVZIcU5OY2srTlk0U3dHNDNrWjMyQWQ0QwpnUlowNEVhc1g3aG5wOG13alpLQ0FIWkpGK2krdC9sSFJOaEFDUzFGMHpyQmMrK3NUek5RK1dnTnVEbzN2OWkyCkNoZ1BRbEtBc3M0enM1NGE1RmJOTDJkWWJqNGRraXhJNDMwbU15dXg4SGJPUWFzVm9DVnpXcWtLa29RN25kdUgKRVBrWU0zRy9yVXRQZzhOVU1VVnlkdDFVbnlkb3c4cnhYYjZiQzYreTFQc2FrWHhSdW10ZFlnbDN3UWtJaitGUAoxVFgwSU9qKzdNZnR0cWdxemFhUm85V0s1Y3dpZTBlRGZBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"type\": \"app_protect\",\n                    \"name\": \"test_policy\",\n                    \"contents\": \"eyJwb2xpY3kiOnsiYXBwbGljYXRpb25MYW5ndWFnZSI6InV0Zi04IiwiYmxvY2tpbmctc2V0dGluZ3MiOnsiZXZhc2lvbnMiOlt7ImRlc2NyaXB0aW9uIjoiQXBhY2hlIHdoaXRlc3BhY2UiLCJlbmFibGVkIjp0cnVlfSx7ImRlc2NyaXB0aW9uIjoiQmFkIHVuZXNjYXBlIiwiZW5hYmxlZCI6dHJ1ZX0seyJkZXNjcmlwdGlvbiI6IkJhcmUgYnl0ZSBkZWNvZGluZyIsImVuYWJsZWQiOnRydWV9LHsiZGVzY3JpcHRpb24iOiJEaXJlY3RvcnkgdHJhdmVyc2FscyIsImVuYWJsZWQiOnRydWV9LHsiZGVzY3JpcHRpb24iOiJJSVMgVW5pY29kZSBjb2RlcG9pbnRzIiwiZW5hYmxlZCI6dHJ1ZX0seyJkZXNjcmlwdGlvbiI6IklJUyBiYWNrc2xhc2hlcyIsImVuYWJsZWQiOnRydWV9LHsiZGVzY3JpcHRpb24iOiJNdWx0aXBsZSBkZWNvZGluZyIsImVuYWJsZWQiOnRydWUsIm1heERlY29kaW5nUGFzc2VzIjoyfV0sImh0dHAtcHJvdG9jb2xzIjpbeyJkZXNjcmlwdGlvbiI6IkhlYWRlciBuYW1lIHdpdGggbm8gaGVhZGVyIHZhbHVlIiwiZW5hYmxlZCI6dHJ1ZX1dLCJ2aW9sYXRpb25zIjpbeyJhbGFybSI6dHJ1ZSwiYmxvY2siOmZhbHNlLCJuYW1lIjoiVklPTF9EQVRBX0dVQVJEIn0seyJhbGFybSI6dHJ1ZSwiYmxvY2siOnRydWUsIm5hbWUiOiJWSU9MX0hUVFBfUFJPVE9DT0wifSx7ImFsYXJtIjp0cnVlLCJibG9jayI6dHJ1ZSwibmFtZSI6IlZJT0xfRklMRVRZUEUifSx7ImFsYXJtIjp0cnVlLCJibG9jayI6dHJ1ZSwibmFtZSI6IlZJT0xfSEVBREVSX01FVEFDSEFSIn0seyJhbGFybSI6dHJ1ZSwiYmxvY2siOnRydWUsIm5hbWUiOiJWSU9MX0VWQVNJT04ifV19LCJkYXRhLWd1YXJkIjp7ImNyZWRpdENhcmROdW1iZXJzIjp0cnVlLCJlbmFibGVkIjp0cnVlLCJlbmZvcmNlbWVudE1vZGUiOiJpZ25vcmUtdXJscy1pbi1saXN0IiwiZW5mb3JjZW1lbnRVcmxzIjpbXSwibWFza0RhdGEiOnRydWUsInVzU29jaWFsU2VjdXJpdHlOdW1iZXJzIjp0cnVlfSwiZW5mb3JjZW1lbnRNb2RlIjoiYmxvY2tpbmciLCJmaWxldHlwZXMiOlt7ImFsbG93ZWQiOnRydWUsImNoZWNrUG9zdERhdGFMZW5ndGgiOmZhbHNlLCJjaGVja1F1ZXJ5U3RyaW5nTGVuZ3RoIjp0cnVlLCJjaGVja1JlcXVlc3RMZW5ndGgiOmZhbHNlLCJjaGVja1VybExlbmd0aCI6dHJ1ZSwibmFtZSI6IioiLCJwb3N0RGF0YUxlbmd0aCI6NDA5NiwicXVlcnlTdHJpbmdMZW5ndGgiOjIwNDgsInJlcXVlc3RMZW5ndGgiOjgxOTIsInJlc3BvbnNlQ2hlY2siOmZhbHNlLCJ0eXBlIjoid2lsZGNhcmQiLCJ1cmxMZW5ndGgiOjIwNDh9LHsiYWxsb3dlZCI6ZmFsc2UsIm5hbWUiOiJiYXQifV0sImdlbmVyYWwiOnsidHJ1c3RYZmYiOnRydWV9LCJuYW1lIjoibmdpbngtcG9saWN5Iiwic2lnbmF0dXJlLXNldHMiOlt7ImFsYXJtIjp0cnVlLCJibG9jayI6dHJ1ZSwibmFtZSI6IkNvbW1hbmQgRXhlY3V0aW9uIFNpZ25hdHVyZXMifSx7ImFsYXJtIjp0cnVlLCJibG9jayI6dHJ1ZSwibmFtZSI6IkNyb3NzIFNpdGUgU2NyaXB0aW5nIFNpZ25hdHVyZXMifSx7ImFsYXJtIjp0cnVlLCJibG9jayI6dHJ1ZSwibmFtZSI6IlNRTCBJbmplY3Rpb24gU2lnbmF0dXJlcyJ9XSwic2lnbmF0dXJlLXNldHRpbmdzIjp7Im1pbmltdW1BY2N1cmFjeUZvckF1dG9BZGRlZFNpZ25hdHVyZXMiOiJsb3cifSwidGVtcGxhdGUiOnsibmFtZSI6IlBPTElDWV9URU1QTEFURV9OR0lOWF9CQVNFIn19fQo=\"\n                }\n            ],\n            \"log_profiles\": [\n                {\n                    \"type\": \"app_protect\",\n                    \"app_protect\": {\n                        \"name\": \"okta\",\n                        \"format\": \"user-defined\",\n                        \"format_string\": \"%date_time%|K|%ip_client%|K|%violation_rating%|K|%violations%\",\n                        \"type\": \"all\",\n                        \"max_request_size\": \"any\",\n                        \"max_message_size\": \"5k\"\n                    }\n                },\n                {\n                    \"type\": \"app_protect\",\n                    \"app_protect\": {\n                        \"name\": \"default\",\n                        \"format\": \"default\",\n                        \"type\": \"all\",\n                        \"max_request_size\": \"any\",\n                        \"max_message_size\": \"5k\"\n                    }\n                }\n            ]\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"tcp\",\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"upstream\": \"l4_upstream\",\n                    \"snippet\": \"IyBUaGlzIGlzIGEgbDQgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/test\",\n                            \"urimatch\": \"exact\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true,\n                                \"uri\": \"/healthcheck\",\n                                \"interval\": 5,\n                                \"fails\": 3,\n                                \"passes\": 2\n                            },\n                            \"rate_limit\": {\n                                \"profile\": \"test_ratelimit\",\n                                \"httpcode\": 429,\n                                \"burst\": 10,\n                                \"delay\": 3\n                            },\n                            \"app_protect\": {\n                                \"enabled\": true,\n                                \"policy\": \"test_policy\",\n                                \"log\": {\n                                    \"profile_name\": \"okta\",\n                                    \"enabled\": true,\n                                    \"destination\": \"192.168.1.5:514\"\n                                }\n                            },\n                            \"snippet\": \"IyBUaGlzIGlzIGEgbG9jYXRpb24gc25pcHBldCBjb21tZW50Cg==\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"test_policy\",\n                        \"log\": {\n                            \"profile_name\": \"default\",\n                            \"enabled\": true,\n                            \"destination\": \"192.168.1.5:514\"\n                        }\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgc2VydmVyIHNuaXBwZXQgY29tbWVudAo=\"\n                },\n                {\n                    \"names\": [\n                        \"server_443\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"upstream\": \"http://test_upstream\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\",\n                            \"weight\": 5,\n                            \"max_fails\": 2,\n                            \"fail_timeout\": \"30s\",\n                            \"max_conns\": 3,\n                            \"slow_start\": \"30s\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\",\n                            \"backup\": true\n                        }\n                    ],\n                    \"sticky\": {\n                        \"cookie\": \"cookie_name\",\n                        \"expires\": \"1h\",\n                        \"domain\": \".testserver\",\n                        \"path\": \"/\"\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"rate_limit\": [\n                {\n                    \"name\": \"test_ratelimit\",\n                    \"key\": \"$binary_remote_addr\",\n                    \"size\": \"10m\",\n                    \"rate\": \"1r/s\"\n                }\n            ],\n            \"maps\": [\n                {\n                    \"match\": \"$host$request_uri\",\n                    \"variable\": \"$backend\",\n                    \"entries\": [\n                        {\n                            \"key\": \"www.test.lab/app1/\",\n                            \"keymatch\": \"iregex\",\n                            \"value\": \"upstream_1\"\n                        },\n                        {\n                            \"key\": \"(.*).test.lab/app2/\",\n                            \"keymatch\": \"regex\",\n                            \"value\": \"upstream_2\"\n                        }\n                    ]\n                }\n            ],\n            \"nginx_plus_api\": {\n                \"write\": true,\n                \"listen\": \"127.0.0.1:8080\",\n                \"allow_acl\": \"0.0.0.0/0\"\n            },\n            \"snippet\": \"IyBUaGlzIGlzIGEgSFRUUCBzbmlwcGV0IGNvbW1lbnQK\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v1",
												"config"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "GitOps",
					"item": [
						{
							"name": "GitOps - NGINX as source of truth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": {{nim_synctime}},\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ],\n            \"certificates\": [\n                {\n                    \"type\": \"certificate\",\n                    \"name\": \"test_cert\",\n                    \"contents\": \"http://acme.gitlab.local/test.crt\"\n                },\n                {\n                    \"type\": \"key\",\n                    \"name\": \"test_key\",\n                    \"contents\": \"http://acme.gitlab.local/test.key\"\n                },\n                {\n                    \"type\": \"chain\",\n                    \"name\": \"test_chain\",\n                    \"contents\": \"http://acme.gitlab.local/test.chain\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"type\": \"app_protect\",\n                    \"name\": \"test_policy\",\n                    \"contents\": \"http://acme.gitlab.local/testpolicy.nap\"\n                }\n            ],\n            \"log_profiles\": [\n                {\n                    \"type\": \"app_protect\",\n                    \"app_protect\": {\n                        \"name\": \"okta\",\n                        \"format\": \"user-defined\",\n                        \"format_string\": \"%date_time%|K|%ip_client%|K|%violation_rating%|K|%violations%\",\n                        \"type\": \"all\",\n                        \"max_request_size\": \"any\",\n                        \"max_message_size\": \"5k\"\n                    }\n                },\n                {\n                    \"type\": \"app_protect\",\n                    \"app_protect\": {\n                        \"name\": \"default\",\n                        \"format\": \"default\",\n                        \"type\": \"all\",\n                        \"max_request_size\": \"any\",\n                        \"max_message_size\": \"5k\"\n                    }\n                }\n            ]\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"tcp\",\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"upstream\": \"l4_upstream\",\n                    \"snippet\": \"http://acme.gitlab.local/test.snippet.server.l4\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/test\",\n                            \"urimatch\": \"exact\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true,\n                                \"uri\": \"/healthcheck\",\n                                \"interval\": 5,\n                                \"fails\": 3,\n                                \"passes\": 2\n                            },\n                            \"rate_limit\": {\n                                \"profile\": \"test_ratelimit\",\n                                \"httpcode\": 429,\n                                \"burst\": 10,\n                                \"delay\": 3\n                            },\n                            \"app_protect\": {\n                                \"enabled\": true,\n                                \"policy\": \"test_policy\",\n                                \"log\": {\n                                    \"profile_name\": \"okta\",\n                                    \"enabled\": true,\n                                    \"destination\": \"192.168.1.5:514\"\n                                }\n                            },\n                            \"snippet\": \"http://acme.gitlab.local/test.snippet.location\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"test_policy\",\n                        \"log\": {\n                            \"profile_name\": \"default\",\n                            \"enabled\": true,\n                            \"destination\": \"192.168.1.5:514\"\n                        }\n                    },\n                    \"snippet\": \"http://acme.gitlab.local/test.snippet.server\"\n                },\n                {\n                    \"names\": [\n                        \"server_443\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"upstream\": \"http://test_upstream\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\",\n                            \"weight\": 5,\n                            \"max_fails\": 2,\n                            \"fail_timeout\": \"30s\",\n                            \"max_conns\": 3,\n                            \"slow_start\": \"30s\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\",\n                            \"backup\": true\n                        }\n                    ],\n                    \"sticky\": {\n                        \"cookie\": \"cookie_name\",\n                        \"expires\": \"1h\",\n                        \"domain\": \".testserver\",\n                        \"path\": \"/\"\n                    },\n                    \"snippet\": \"http://acme.gitlab.local/test.snippet.upstream\"\n                }\n            ],\n            \"rate_limit\": [\n                {\n                    \"name\": \"test_ratelimit\",\n                    \"key\": \"$binary_remote_addr\",\n                    \"size\": \"10m\",\n                    \"rate\": \"1r/s\"\n                }\n            ],\n            \"maps\": [\n                {\n                    \"match\": \"$host$request_uri\",\n                    \"variable\": \"$backend\",\n                    \"entries\": [\n                        {\n                            \"key\": \"www.test.lab/app1/\",\n                            \"keymatch\": \"iregex\",\n                            \"value\": \"upstream_1\"\n                        },\n                        {\n                            \"key\": \"(.*).test.lab/app2/\",\n                            \"keymatch\": \"regex\",\n                            \"value\": \"upstream_2\"\n                        }\n                    ]\n                }\n            ],\n            \"nginx_plus_api\": {\n                \"write\": true,\n                \"listen\": \"127.0.0.1:8080\",\n                \"allow_acl\": \"0.0.0.0/0\"\n            },\n            \"snippet\": \"http://acme.gitlab.local/test.snippet.http\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v1",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "GitOps - GitHub as source of truth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": {{nim_synctime}},\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ],\n            \"certificates\": [\n                {\n                    \"type\": \"certificate\",\n                    \"name\": \"test_cert\",\n                    \"contents\": \"{{github_root}}/test.crt\"\n                },\n                {\n                    \"type\": \"key\",\n                    \"name\": \"test_key\",\n                    \"contents\": \"{{github_root}}/test.key\"\n                },\n                {\n                    \"type\": \"chain\",\n                    \"name\": \"test_chain\",\n                    \"contents\": \"{{github_root}}/test.chain\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"type\": \"app_protect\",\n                    \"name\": \"test_policy\",\n                    \"contents\": \"{{github_root}}/nap-policy.json\"\n                }\n            ],\n            \"log_profiles\": [\n                {\n                    \"type\": \"app_protect\",\n                    \"app_protect\": {\n                        \"name\": \"okta\",\n                        \"format\": \"user-defined\",\n                        \"format_string\": \"%date_time%|K|%ip_client%|K|%violation_rating%|K|%violations%\",\n                        \"type\": \"all\",\n                        \"max_request_size\": \"any\",\n                        \"max_message_size\": \"5k\"\n                    }\n                },\n                {\n                    \"type\": \"app_protect\",\n                    \"app_protect\": {\n                        \"name\": \"default\",\n                        \"format\": \"default\",\n                        \"type\": \"all\",\n                        \"max_request_size\": \"any\",\n                        \"max_message_size\": \"5k\"\n                    }\n                }\n            ]\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"tcp\",\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"upstream\": \"l4_upstream\",\n                    \"snippet\": \"{{github_root}}/test.snippet.server.l4\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/test\",\n                            \"urimatch\": \"exact\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true,\n                                \"uri\": \"/healthcheck\",\n                                \"interval\": 5,\n                                \"fails\": 3,\n                                \"passes\": 2\n                            },\n                            \"rate_limit\": {\n                                \"profile\": \"test_ratelimit\",\n                                \"httpcode\": 429,\n                                \"burst\": 10,\n                                \"delay\": 3\n                            },\n                            \"app_protect\": {\n                                \"enabled\": true,\n                                \"policy\": \"test_policy\",\n                                \"log\": {\n                                    \"profile_name\": \"okta\",\n                                    \"enabled\": true,\n                                    \"destination\": \"192.168.1.5:514\"\n                                }\n                            },\n                            \"snippet\": \"{{github_root}}/test.snippet.location\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"test_policy\",\n                        \"log\": {\n                            \"profile_name\": \"default\",\n                            \"enabled\": true,\n                            \"destination\": \"192.168.1.5:514\"\n                        }\n                    },\n                    \"snippet\": \"{{github_root}}/test.snippet.server\"\n                },\n                {\n                    \"names\": [\n                        \"server_443\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"chain\": \"test_chain\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"upstream\": \"http://test_upstream\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\",\n                            \"weight\": 5,\n                            \"max_fails\": 2,\n                            \"fail_timeout\": \"30s\",\n                            \"max_conns\": 3,\n                            \"slow_start\": \"30s\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\",\n                            \"backup\": true\n                        }\n                    ],\n                    \"sticky\": {\n                        \"cookie\": \"cookie_name\",\n                        \"expires\": \"1h\",\n                        \"domain\": \".testserver\",\n                        \"path\": \"/\"\n                    },\n                    \"snippet\": \"{{github_root}}/test.snippet.upstream\"\n                }\n            ],\n            \"rate_limit\": [\n                {\n                    \"name\": \"test_ratelimit\",\n                    \"key\": \"$binary_remote_addr\",\n                    \"size\": \"10m\",\n                    \"rate\": \"1r/s\"\n                }\n            ],\n            \"maps\": [\n                {\n                    \"match\": \"$host$request_uri\",\n                    \"variable\": \"$backend\",\n                    \"entries\": [\n                        {\n                            \"key\": \"www.test.lab/app1/\",\n                            \"keymatch\": \"iregex\",\n                            \"value\": \"upstream_1\"\n                        },\n                        {\n                            \"key\": \"(.*).test.lab/app2/\",\n                            \"keymatch\": \"regex\",\n                            \"value\": \"upstream_2\"\n                        }\n                    ]\n                }\n            ],\n            \"nginx_plus_api\": {\n                \"write\": true,\n                \"listen\": \"127.0.0.1:8080\",\n                \"allow_acl\": \"0.0.0.0/0\"\n            },\n            \"snippet\": \"{{github_root}}/test.snippet.http\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v1",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GitOps declaration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v1",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GitOps declaration status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config/{{configUid}}/status",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v1",
										"config",
										"{{configUid}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete GitOps declaration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v1/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v1",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "v2",
			"item": [
				{
					"name": "Configuration generation",
					"item": [
						{
							"name": "Basic - LB",
							"item": [
								{
									"name": "Basic - LB - plaintext output",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"plaintext\"\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"name\": \"sample L4 service\",\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"udp\"\n                    },\n                    \"upstream\": \"l4_upstream\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"A sample HTTP service\",\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v2",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Basic - LB - json b64 encoded output",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"json\"\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"name\": \"sample L4 service\",\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"udp\"\n                    },\n                    \"upstream\": \"l4_upstream\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"A sample HTTP service\",\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v2",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Basic - LB - ConfigMap output",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"configmap\",\n        \"configmap\": {\n            \"name\": \"nginx.test\",\n            \"filename\": \"testservice.conf\",\n            \"namespace\": \"test-namespace\"\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"name\": \"sample L4 service\",\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"udp\"\n                    },\n                    \"upstream\": \"l4_upstream\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"A sample HTTP service\",\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v2",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Basic - LB - HTTP output",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"http\",\n        \"http\": {\n            \"url\": \"http://192.168.1.19:8080/path/service\"\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"name\": \"sample L4 service\",\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"udp\"\n                    },\n                    \"upstream\": \"l4_upstream\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"A sample HTTP service\",\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v2",
												"config"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Advanced",
							"item": [
								{
									"name": "Advanced LB - plaintext output",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"plaintext\"\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"name\": \"sample_layer4_service\",\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"tcp\",\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"upstream\": \"l4_upstream\",\n                    \"snippet\": \"IyBUaGlzIGlzIGEgbDQgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"HTTP test application\",\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/test\",\n                            \"urimatch\": \"exact\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true,\n                                \"uri\": \"/healthcheck\",\n                                \"interval\": 5,\n                                \"fails\": 3,\n                                \"passes\": 2\n                            },\n                            \"rate_limit\": {\n                                \"profile\": \"test_ratelimit\",\n                                \"httpcode\": 429,\n                                \"burst\": 10,\n                                \"delay\": 3\n                            },\n                            \"app_protect\": {\n                                \"enabled\": true,\n                                \"policy\": \"test_policy\",\n                                \"log\": {\n                                    \"profile_name\": \"log_illegal\",\n                                    \"enabled\": true,\n                                    \"destination\": \"192.168.1.5:514\"\n                                }\n                            },\n                            \"snippet\": \"IyBUaGlzIGlzIGEgbG9jYXRpb24gc25pcHBldCBjb21tZW50Cg==\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"test_policy\",\n                        \"log\": {\n                            \"profile_name\": \"log_blocked\",\n                            \"enabled\": true,\n                            \"destination\": \"192.168.1.5:514\"\n                        }\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgc2VydmVyIHNuaXBwZXQgY29tbWVudAo=\"\n                },\n                {\n                    \"name\": \"another HTTP test application\",\n                    \"names\": [\n                        \"server_443\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"upstream\": \"http://test_upstream\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\",\n                            \"weight\": 5,\n                            \"max_fails\": 2,\n                            \"fail_timeout\": \"30s\",\n                            \"max_conns\": 3,\n                            \"slow_start\": \"30s\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\",\n                            \"backup\": true\n                        }\n                    ],\n                    \"sticky\": {\n                        \"cookie\": \"cookie_name\",\n                        \"expires\": \"1h\",\n                        \"domain\": \".testserver\",\n                        \"path\": \"/\"\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"rate_limit\": [\n                {\n                    \"name\": \"test_ratelimit\",\n                    \"key\": \"$binary_remote_addr\",\n                    \"size\": \"10m\",\n                    \"rate\": \"1r/s\"\n                }\n            ],\n            \"maps\": [\n                {\n                    \"match\": \"$host$request_uri\",\n                    \"variable\": \"$backend\",\n                    \"entries\": [\n                        {\n                            \"key\": \"www.test.lab/app1/\",\n                            \"keymatch\": \"iregex\",\n                            \"value\": \"upstream_1\"\n                        },\n                        {\n                            \"key\": \"(.*).test.lab/app2/\",\n                            \"keymatch\": \"regex\",\n                            \"value\": \"upstream_2\"\n                        }\n                    ]\n                }\n            ],\n            \"nginx_plus_api\": {\n                \"write\": true,\n                \"listen\": \"127.0.0.1:8080\",\n                \"allow_acl\": \"0.0.0.0/0\"\n            },\n            \"snippet\": \"IyBUaGlzIGlzIGEgSFRUUCBzbmlwcGV0IGNvbW1lbnQK\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v2",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Advanced LB - json b64 encoded output",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"json\"\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"name\": \"sample_layer4_service\",\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"tcp\",\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"upstream\": \"l4_upstream\",\n                    \"snippet\": \"IyBUaGlzIGlzIGEgbDQgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"HTTP test application\",\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/test\",\n                            \"urimatch\": \"exact\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true,\n                                \"uri\": \"/healthcheck\",\n                                \"interval\": 5,\n                                \"fails\": 3,\n                                \"passes\": 2\n                            },\n                            \"rate_limit\": {\n                                \"profile\": \"test_ratelimit\",\n                                \"httpcode\": 429,\n                                \"burst\": 10,\n                                \"delay\": 3\n                            },\n                            \"app_protect\": {\n                                \"enabled\": true,\n                                \"policy\": \"test_policy\",\n                                \"log\": {\n                                    \"profile_name\": \"log_illegal\",\n                                    \"enabled\": true,\n                                    \"destination\": \"192.168.1.5:514\"\n                                }\n                            },\n                            \"snippet\": \"IyBUaGlzIGlzIGEgbG9jYXRpb24gc25pcHBldCBjb21tZW50Cg==\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"test_policy\",\n                        \"log\": {\n                            \"profile_name\": \"log_blocked\",\n                            \"enabled\": true,\n                            \"destination\": \"192.168.1.5:514\"\n                        }\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgc2VydmVyIHNuaXBwZXQgY29tbWVudAo=\"\n                },\n                {\n                    \"name\": \"another HTTP test application\",\n                    \"names\": [\n                        \"server_443\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"upstream\": \"http://test_upstream\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\",\n                            \"weight\": 5,\n                            \"max_fails\": 2,\n                            \"fail_timeout\": \"30s\",\n                            \"max_conns\": 3,\n                            \"slow_start\": \"30s\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\",\n                            \"backup\": true\n                        }\n                    ],\n                    \"sticky\": {\n                        \"cookie\": \"cookie_name\",\n                        \"expires\": \"1h\",\n                        \"domain\": \".testserver\",\n                        \"path\": \"/\"\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"rate_limit\": [\n                {\n                    \"name\": \"test_ratelimit\",\n                    \"key\": \"$binary_remote_addr\",\n                    \"size\": \"10m\",\n                    \"rate\": \"1r/s\"\n                }\n            ],\n            \"maps\": [\n                {\n                    \"match\": \"$host$request_uri\",\n                    \"variable\": \"$backend\",\n                    \"entries\": [\n                        {\n                            \"key\": \"www.test.lab/app1/\",\n                            \"keymatch\": \"iregex\",\n                            \"value\": \"upstream_1\"\n                        },\n                        {\n                            \"key\": \"(.*).test.lab/app2/\",\n                            \"keymatch\": \"regex\",\n                            \"value\": \"upstream_2\"\n                        }\n                    ]\n                }\n            ],\n            \"nginx_plus_api\": {\n                \"write\": true,\n                \"listen\": \"127.0.0.1:8080\",\n                \"allow_acl\": \"0.0.0.0/0\"\n            },\n            \"snippet\": \"IyBUaGlzIGlzIGEgSFRUUCBzbmlwcGV0IGNvbW1lbnQK\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v2",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Advanced LB - ConfigMap output",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"configmap\",\n        \"configmap\": {\n            \"name\": \"nginx.test\",\n            \"filename\": \"testservice.conf\",\n            \"namespace\": \"test-namespace\"\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"name\": \"sample_layer4_service\",\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"tcp\",\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"upstream\": \"l4_upstream\",\n                    \"snippet\": \"IyBUaGlzIGlzIGEgbDQgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"HTTP test application\",\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/test\",\n                            \"urimatch\": \"exact\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true,\n                                \"uri\": \"/healthcheck\",\n                                \"interval\": 5,\n                                \"fails\": 3,\n                                \"passes\": 2\n                            },\n                            \"rate_limit\": {\n                                \"profile\": \"test_ratelimit\",\n                                \"httpcode\": 429,\n                                \"burst\": 10,\n                                \"delay\": 3\n                            },\n                            \"app_protect\": {\n                                \"enabled\": true,\n                                \"policy\": \"test_policy\",\n                                \"log\": {\n                                    \"profile_name\": \"log_illegal\",\n                                    \"enabled\": true,\n                                    \"destination\": \"192.168.1.5:514\"\n                                }\n                            },\n                            \"snippet\": \"IyBUaGlzIGlzIGEgbG9jYXRpb24gc25pcHBldCBjb21tZW50Cg==\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"test_policy\",\n                        \"log\": {\n                            \"profile_name\": \"log_blocked\",\n                            \"enabled\": true,\n                            \"destination\": \"192.168.1.5:514\"\n                        }\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgc2VydmVyIHNuaXBwZXQgY29tbWVudAo=\"\n                },\n                {\n                    \"name\": \"another HTTP test application\",\n                    \"names\": [\n                        \"server_443\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"upstream\": \"http://test_upstream\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\",\n                            \"weight\": 5,\n                            \"max_fails\": 2,\n                            \"fail_timeout\": \"30s\",\n                            \"max_conns\": 3,\n                            \"slow_start\": \"30s\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\",\n                            \"backup\": true\n                        }\n                    ],\n                    \"sticky\": {\n                        \"cookie\": \"cookie_name\",\n                        \"expires\": \"1h\",\n                        \"domain\": \".testserver\",\n                        \"path\": \"/\"\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"rate_limit\": [\n                {\n                    \"name\": \"test_ratelimit\",\n                    \"key\": \"$binary_remote_addr\",\n                    \"size\": \"10m\",\n                    \"rate\": \"1r/s\"\n                }\n            ],\n            \"maps\": [\n                {\n                    \"match\": \"$host$request_uri\",\n                    \"variable\": \"$backend\",\n                    \"entries\": [\n                        {\n                            \"key\": \"www.test.lab/app1/\",\n                            \"keymatch\": \"iregex\",\n                            \"value\": \"upstream_1\"\n                        },\n                        {\n                            \"key\": \"(.*).test.lab/app2/\",\n                            \"keymatch\": \"regex\",\n                            \"value\": \"upstream_2\"\n                        }\n                    ]\n                }\n            ],\n            \"nginx_plus_api\": {\n                \"write\": true,\n                \"listen\": \"127.0.0.1:8080\",\n                \"allow_acl\": \"0.0.0.0/0\"\n            },\n            \"snippet\": \"IyBUaGlzIGlzIGEgSFRUUCBzbmlwcGV0IGNvbW1lbnQK\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v2",
												"config"
											]
										}
									},
									"response": []
								},
								{
									"name": "Advanced LB - HTTP output",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"output\": {\n        \"type\": \"http\",\n        \"http\": {\n            \"url\": \"http://192.168.1.19:8080/path/service\"\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"name\": \"sample_layer4_service\",\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"tcp\",\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"upstream\": \"l4_upstream\",\n                    \"snippet\": \"IyBUaGlzIGlzIGEgbDQgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"HTTP test application\",\n                    \"names\": [\n                        \"server_8080.nginx.lab\",\n                        \"server_8081.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/test\",\n                            \"urimatch\": \"exact\",\n                            \"upstream\": \"http://test_upstream\",\n                            \"health_check\": {\n                                \"enabled\": true,\n                                \"uri\": \"/healthcheck\",\n                                \"interval\": 5,\n                                \"fails\": 3,\n                                \"passes\": 2\n                            },\n                            \"rate_limit\": {\n                                \"profile\": \"test_ratelimit\",\n                                \"httpcode\": 429,\n                                \"burst\": 10,\n                                \"delay\": 3\n                            },\n                            \"app_protect\": {\n                                \"enabled\": true,\n                                \"policy\": \"test_policy\",\n                                \"log\": {\n                                    \"profile_name\": \"log_illegal\",\n                                    \"enabled\": true,\n                                    \"destination\": \"192.168.1.5:514\"\n                                }\n                            },\n                            \"snippet\": \"IyBUaGlzIGlzIGEgbG9jYXRpb24gc25pcHBldCBjb21tZW50Cg==\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"test_policy\",\n                        \"log\": {\n                            \"profile_name\": \"log_blocked\",\n                            \"enabled\": true,\n                            \"destination\": \"192.168.1.5:514\"\n                        }\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgc2VydmVyIHNuaXBwZXQgY29tbWVudAo=\"\n                },\n                {\n                    \"name\": \"another HTTP test application\",\n                    \"names\": [\n                        \"server_443\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"upstream\": \"http://test_upstream\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\",\n                            \"weight\": 5,\n                            \"max_fails\": 2,\n                            \"fail_timeout\": \"30s\",\n                            \"max_conns\": 3,\n                            \"slow_start\": \"30s\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\",\n                            \"backup\": true\n                        }\n                    ],\n                    \"sticky\": {\n                        \"cookie\": \"cookie_name\",\n                        \"expires\": \"1h\",\n                        \"domain\": \".testserver\",\n                        \"path\": \"/\"\n                    },\n                    \"snippet\": \"IyBUaGlzIGlzIGEgdXBzdHJlYW0gc25pcHBldCBjb21tZW50Cg==\"\n                }\n            ],\n            \"rate_limit\": [\n                {\n                    \"name\": \"test_ratelimit\",\n                    \"key\": \"$binary_remote_addr\",\n                    \"size\": \"10m\",\n                    \"rate\": \"1r/s\"\n                }\n            ],\n            \"maps\": [\n                {\n                    \"match\": \"$host$request_uri\",\n                    \"variable\": \"$backend\",\n                    \"entries\": [\n                        {\n                            \"key\": \"www.test.lab/app1/\",\n                            \"keymatch\": \"iregex\",\n                            \"value\": \"upstream_1\"\n                        },\n                        {\n                            \"key\": \"(.*).test.lab/app2/\",\n                            \"keymatch\": \"regex\",\n                            \"value\": \"upstream_2\"\n                        }\n                    ]\n                }\n            ],\n            \"nginx_plus_api\": {\n                \"write\": true,\n                \"listen\": \"127.0.0.1:8080\",\n                \"allow_acl\": \"0.0.0.0/0\"\n            },\n            \"snippet\": \"IyBUaGlzIGlzIGEgSFRUUCBzbmlwcGV0IGNvbW1lbnQK\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
											"protocol": "http",
											"host": [
												"{{ncg_host}}"
											],
											"port": "{{ncg_port}}",
											"path": [
												"v2",
												"config"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Declarative automation - NGINX App Protect WAF",
					"item": [
						{
							"name": "Create initial NGINX configuration with NGINX App Protect WAF",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ],\n            \"certificates\": [\n                {\n                    \"type\": \"certificate\",\n                    \"name\": \"test_cert\",\n                    \"contents\": \"{{github_gitops_root}}/v2/www.online-boutique.local.crt\"\n                },\n                {\n                    \"type\": \"key\",\n                    \"name\": \"test_key\",\n                    \"contents\": \"{{github_gitops_root}}/v2/www.online-boutique.local.key\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"type\": \"app_protect\",\n                    \"name\": \"production-policy\",\n                    \"active_tag\": \"xss-blocked\",\n                    \"versions\": [\n                        {\n                            \"tag\": \"xss-blocked\",\n                            \"displayName\": \"Production Policy - XSS blocked\",\n                            \"description\": \"This is a production-ready policy - XSS blocked\",\n                            \"contents\": \"{{github_gitops_root}}/v2/nap-policy-xss-blocked.json\"\n                        },\n                        {\n                            \"tag\": \"xss-allowed\",\n                            \"displayName\": \"Production Policy - XSS allowed\",\n                            \"description\": \"This is a production-ready policy - XSS allowed\",\n                            \"contents\": \"{{github_gitops_root}}/v2/nap-policy-xss-allowed.json\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"declaration\": {\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"Online boutique HTTPS\",\n                    \"names\": [\n                        \"www.online-boutique.lan\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"0.0.0.0:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/online_boutique_https_access_log\",\n                        \"error\": \"/var/log/nginx/online_boutique_https_error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://upstream_boutique\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"production-policy\",\n                        \"log\": {\n                            \"profile_name\": \"secops_dashboard\",\n                            \"enabled\": true,\n                            \"destination\": \"127.0.0.1:514\"\n                        }\n                    }\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"upstream_boutique\",\n                    \"origin\": [\n                        {\n                            \"server\": \"192.168.1.200:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change active NGINX App Protect policy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ],\n            \"policies\": [\n                {\n                    \"type\": \"app_protect\",\n                    \"name\": \"production-policy\",\n                    \"active_tag\": \"xss-allowed\",\n                    \"versions\": [\n                        {\n                            \"tag\": \"xss-blocked\",\n                            \"displayName\": \"Production Policy - XSS blocked\",\n                            \"description\": \"Production-ready policy - XSS blocked\",\n                            \"contents\": \"{{github_gitops_root}}/v2/nap-policy-xss-blocked.json\"\n                        },\n                        {\n                            \"tag\": \"xss-allowed\",\n                            \"displayName\": \"Production Policy - XSS allowed\",\n                            \"description\": \"Production-ready policy - XSS allowed\",\n                            \"contents\": \"{{github_gitops_root}}/v2/nap-policy-xss-allowed.json\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update TLS certificates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ],\n            \"certificates\": [\n                {\n                    \"type\": \"certificate\",\n                    \"name\": \"test_cert\",\n                    \"contents\": \"{{github_gitops_root}}/v2/www2.online-boutique.local.crt\"\n                },\n                {\n                    \"type\": \"key\",\n                    \"name\": \"test_key\",\n                    \"contents\": \"{{github_gitops_root}}/v2/www2.online-boutique.local.key\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable NGINX App Protect WAF",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ]\n        }\n    },\n    \"declaration\": {\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"Online boutique HTTPS\",\n                    \"names\": [\n                        \"www.online-boutique.lan\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"0.0.0.0:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/online_boutique_https_access_log\",\n                        \"error\": \"/var/log/nginx/online_boutique_https_error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://upstream_boutique\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get declaration status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}/status",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  declaration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete  declaration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Declarative automation - GitOps",
					"item": [
						{
							"name": "NGINX App Protect WAF and GitOps",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 5,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ],\n            \"certificates\": [\n                {\n                    \"type\": \"certificate\",\n                    \"name\": \"test_cert\",\n                    \"contents\": \"{{github_gitops_root}}/v2/www.online-boutique.local.crt\"\n                },\n                {\n                    \"type\": \"key\",\n                    \"name\": \"test_key\",\n                    \"contents\": \"{{github_gitops_root}}/v2/www.online-boutique.local.key\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"type\": \"app_protect\",\n                    \"name\": \"production-policy\",\n                    \"active_tag\": \"gitops\",\n                    \"versions\": [\n                        {\n                            \"tag\": \"gitops\",\n                            \"displayName\": \"Production Policy - GitOps\",\n                            \"description\": \"This is a production-ready policy - Managed by GitOps\",\n                            \"contents\": \"{{github_gitops_root}}/v2/nap-policy-gitops.json\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"declaration\": {\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"Online boutique HTTPS\",\n                    \"names\": [\n                        \"www.online-boutique.lan\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"0.0.0.0:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"test_cert\",\n                            \"key\": \"test_key\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ]\n                        }\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/online_boutique_https_access_log\",\n                        \"error\": \"/var/log/nginx/online_boutique_https_error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://upstream_boutique\"\n                        }\n                    ],\n                    \"app_protect\": {\n                        \"enabled\": true,\n                        \"policy\": \"production-policy\",\n                        \"log\": {\n                            \"profile_name\": \"secops_dashboard\",\n                            \"enabled\": true,\n                            \"destination\": \"127.0.0.1:514\"\n                        }\n                    }\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"upstream_boutique\",\n                    \"origin\": [\n                        {\n                            \"server\": \"192.168.1.200:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get declaration status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}/status",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  declaration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete  declaration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CRUD automation",
					"item": [
						{
							"name": "Create initial NGINX configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ]\n        }\n    },\n    \"declaration\": {\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"HTTP test application\",\n                    \"names\": [\n                        \"patched_server.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_log\",\n                        \"error\": \"/var/log/nginx/error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://test_upstream\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update HTTP upstream",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ]\n        }\n    },\n    \"declaration\": {\n        \"http\": {\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.3:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.4:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.5:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify and add HTTP upstream",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ]\n        }\n    },\n    \"declaration\": {\n        \"http\": {\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:80\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:80\"\n                        }\n                    ]\n                },\n                {\n                    \"name\": \"test_upstream_added\",\n                    \"origin\": [\n                        {\n                            \"server\": \"192.168.1.1:80\"\n                        },\n                        {\n                            \"server\": \"192.168.1.2:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify and add HTTP server and upstream",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ]\n        }\n    },\n    \"declaration\": {\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"HTTP test application\",\n                    \"names\": [\n                        \"patched_server_v2.nginx.lab\"\n                    ],\n                    \"listen\": {\n                        \"address\": \"127.0.0.1:8080\"\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/access_v2_log\",\n                        \"error\": \"/var/log/nginx/error_v2_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://test_upstream_added\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream_added\",\n                    \"origin\": [\n                        {\n                            \"server\": \"192.168.1.100:80\",\n                            \"weight\": 5,\n                            \"max_fails\": 2,\n                            \"fail_timeout\": \"30s\",\n                            \"max_conns\": 3,\n                            \"slow_start\": \"30s\"\n                        },\n                        {\n                            \"server\": \"192.168.1.101:80\"\n                        },\n                        {\n                            \"server\": \"192.168.1.102:80\"\n                        },\n                        {\n                            \"server\": \"192.168.1.103:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove HTTP server and upstream",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ]\n        }\n    },\n    \"declaration\": {\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"HTTP test application\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"test_upstream_added\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify Stream server and upstream",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ]\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"name\": \"sample_layer4_service\",\n                    \"listen\": {\n                        \"address\": \"10053\",\n                        \"protocol\": \"tcp\"\n                    },\n                    \"upstream\": \"l4_upstream\",\n                    \"snippet\": \"http://acme.gitlab.local/test.snippet.server.l4.txt\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"l4_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"10.0.0.1:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.2:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.3:53\"\n                        },\n                        {\n                            \"server\": \"10.0.0.4:53\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add stream server and upstream",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ]\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"name\": \"new_tcp_service\",\n                    \"listen\": {\n                        \"address\": \"5432\",\n                        \"protocol\": \"tcp\"\n                    },\n                    \"upstream\": \"tcp_5432_upstream\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"tcp_5432_upstream\",\n                    \"origin\": [\n                        {\n                            \"server\": \"172.16.10.1:5432\"\n                        },\n                        {\n                            \"server\": \"172.16.10.1:5432\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove stream server and upstream",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ]\n        }\n    },\n    \"declaration\": {\n        \"layer4\": {\n            \"servers\": [\n                {\n                    \"name\": \"new_tcp_service\"\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"tcp_5432_upstream\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get declaration status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}/status",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get  declaration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete  declaration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Erase configuration",
					"item": [
						{
							"name": "Clean NGINX configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_app_protect_module\",\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ]\n        }\n    },\n    \"declaration\": {\n   \n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete  declaration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config/{{configUid}}",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config",
										"{{configUid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Examples",
					"item": [
						{
							"name": "HTTPS server with mTLS, OCSP, SSL Stapling",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var respData = JSON.parse(responseBody);",
											"",
											"tests[\"configUid is: \" +respData.configUid] = respData.configUid;",
											"",
											"pm.collectionVariables.set('configUid',respData.configUid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"output\": {\n        \"type\": \"nms\",\n        \"nms\": {\n            \"url\": \"{{nim_host}}\",\n            \"username\": \"{{nim_username}}\",\n            \"password\": \"{{nim_password}}\",\n            \"instancegroup\": \"{{nim_instancegroup}}\",\n            \"synctime\": 0,\n            \"modules\": [\n                \"ngx_http_js_module\",\n                \"ngx_stream_js_module\"\n            ],\n            \"certificates\": [\n                {\n                    \"type\": \"certificate\",\n                    \"name\": \"server_cert\",\n                    \"contents\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdSRENDQkN5Z0F3SUJBZ0lVTTNJQVZIRmxhSTVsY1d0TjZxOUVhcnlka0w4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1NURUxNQWtHQTFVRUJoTUNTVlF4RFRBTEJnTlZCQWdNQkVGemRHa3hFVEFQQmdOVkJBb01DRlJsYzNRZwpUR0ZpTVJnd0ZnWURWUVFEREE5MmJTMWliR0Z1YXk1bVppNXNZVzR3SGhjTk1qTXdOakE0TVRBd01qTTVXaGNOCk1qUXdOakEzTVRBd01qTTVXakJKTVFzd0NRWURWUVFHRXdKSlZERU5NQXNHQTFVRUNBd0VRWE4wYVRFUk1BOEcKQTFVRUNnd0lWR1Z6ZENCTVlXSXhHREFXQmdOVkJBTU1EM1p0TFdKc1lXNXJMbVptTG14aGJqQ0NBaUl3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFMRFQ2bnZleVZlNi9VZlk2aUtHVC9oV1A0cktDSGR0ClloZWU3RGVZR29QWGhGVjB6a3grVWExanBEZ21WUE1kVEJBdnoxODg5NzlEcHBqdmNYeFhsRmpnaUhjWDhpWVgKSXovSUVMc3dKRUNITWNsNkxmelA5eDVUY1gxTEdFblFOTWhHRzA2MjlxU2NCQmQyUUNiWlY0UWE1TkxlQnQ4cQpHQ2lXY3JiQnR3YlpiSGo1dk9aenJrdHBtRFBGS1V4bXR5b2dBQnNaTllnL0F3Y1l2RXdBOEQ0QTN0VEgxcGhvCkdYY3ZvZWpJelhRMUdmYys5azR3OFhHYWFQOGd2bTdOMXN2MnU2Yld4SHRGZHpWQk9udzJyaHUvWGYyY0N0dW4KUnIxSENKQXRRSDlkbDhzZks1czBSRlVuTlVYbFBiNTFBTjBjVFVGbEYrZlVUVmVON3dNMTdmeVZVY3IydTltSwo0UGdoWjkvMml0ZUpZV3hjK3k4V2NEQzBUV3hwZ2paVEw5Tk1GK2t6SXV2TjJOWFFybjcvSU5UQTMvNFlmWGRPCloxelpTdTlkclRMcG5DZHRpOWxuRHBKODd3bW41cVZSTlZiTlZRbldEeW5yZnoyTU1DY21jLzcvdkJFN2dDemQKNFJLWHJLdHloenlQSitycmh3NmpxYVA4QytaZGRvKzkvak9QVDFTSnUxZ21VbzFuZ2hBMWh2N0M5RUYrM2xQVApYSk5WV3dtYkdWK0p4cUdKSjJSa2toMlIrZTVIREdRY2hGWjJIcXBGTGVQN0trTHJBR2RkZFZQWEZhQ0RiU0R6ClJQd0I5WFlhakg5Zm5QWEtFT3ZpVEJhQVNjWUZwTXB5cm02UkxHUGRSVnE2RUNYVlB4MDdHdGFCaEVvVWIwK2YKVkZnNExtQkx4MldQQWdNQkFBR2pnZ0VpTUlJQkhqQUpCZ05WSFJNRUFqQUFNQkVHQ1dDR1NBR0crRUlCQVFRRQpBd0lHUURBekJnbGdoa2dCaHZoQ0FRMEVKaFlrVDNCbGJsTlRUQ0JIWlc1bGNtRjBaV1FnVTJWeWRtVnlJRU5sCmNuUnBabWxqWVhSbE1CMEdBMVVkRGdRV0JCVHZFZWJGK1JDV0JhcGVPWUdpQ0YyVHZxbExYekNCaEFZRFZSMGoKQkgwd2U0QVVFdW9Db3kvcmhMQmxzcm5KdXE2QzFJczQxbFNoVGFSTE1Fa3hDekFKQmdOVkJBWVRBa2xVTVEwdwpDd1lEVlFRSURBUkJjM1JwTVJFd0R3WURWUVFLREFoVVpYTjBJRXhoWWpFWU1CWUdBMVVFQXd3UGRtMHRZbXhoCmJtc3VabVl1YkdGdWdoUld4QjhCa3lmK1RkQXc2Q3dPZE1aT0k0NlZ2REFPQmdOVkhROEJBZjhFQkFNQ0JhQXcKRXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFHUDR6ZkdseTI1RwpneTBSeC9SSTNpNzJDVlIrSXY3SW5WTUVGWDZqRHRNV3hSblFtRGZsMWtTOVF1Y3hNb0tnOE9URStMcnlzdGJsClF4WGZiakZQekNoNHB1UGtGTmNBeG1mVmR4b20xR1lodWpoYTBQOUswUURZSDZycGlUaFdSQ2greUovQm1qZ2wKTlJabks4WGRqME85Ui9XKzJrTFRac2VFbS9hZHFVQ3dkYzNBWWlNWGh4QXkvQlh3bFRQeDMyMHZCcXYxZGFyVgp5ZlVoRlM1Rkg3enV2bGtGQ1p6M3lpOGYvYXMwbkRTUkFrY3dPRFQvN1diQlN4QTk3ZzJmRk1EMEI3WlUvbndGCmU4VnRzNDl3YmZ6QWJRMk40RUc2OEVhODE1VlFRM2N6YWthdjBCdkxHL2UwT0habGxYcUVhV1ZlWFJtSWFFOHcKWko5OEhUaDJMbUlFV2Jpdm94Kyt2UXd3bVhKTm1DRFVXNnVmcHdBOVdKQ0VhYmhxeXdGVzh1dFVENzRTVXE3SApEUDhNamtJZ0o3ekl2Tkd1RkFsSzd6c2xpV2pzeUN1OGVNamhvN2pVRFhGR1R0R0ZMUGtVa08vSysrSGVVRFg0Cm1OWDJ2aHI3NGRqRkNBTTEvOTYxWnB5NUFYUzZkd2g3MFlJL2dMdldSL0J1ejBnNEp6YUI2UFo4M1ErYm9QVHYKM1ZIS2xOWjlKQlhRTmtSc3N6U0dYWG5MYmtOTmNwVFg2cnAyZ1pUSS9NNDhGTnBxanAxOXRpQVg3bWN0cTl2SgpNejhvemhEcHZmSTlnMjFsNFZlRGdpbWEwTDVBc1pQbFdIQlZjcy9yL3dMU2YzWFVYZEs0UHpCQUdIRFBidXYrCnpKOVNqS0NFVll2bHRhMHlUUVBCSFJPa2Y2MG1sVmh6Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\"\n                },\n                {\n                    \"type\": \"key\",\n                    \"name\": \"server_key\",\n                    \"contents\": \"LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBc05QcWU5N0pWN3I5UjlqcUlvWlArRlkvaXNvSWQyMWlGNTdzTjVnYWc5ZUVWWFRPClRINVJyV09rT0NaVTh4MU1FQy9QWHp6M3YwT21tTzl4ZkZlVVdPQ0lkeGZ5SmhjalA4Z1F1ekFrUUljeHlYb3QKL00vM0hsTnhmVXNZU2RBMHlFWWJUcmIycEp3RUYzWkFKdGxYaEJyazB0NEczeW9ZS0paeXRzRzNCdGxzZVBtOAo1bk91UzJtWU04VXBUR2EzS2lBQUd4azFpRDhEQnhpOFRBRHdQZ0RlMU1mV21HZ1pkeStoNk1qTmREVVo5ejcyClRqRHhjWnBvL3lDK2JzM1d5L2E3cHRiRWUwVjNOVUU2ZkRhdUc3OWQvWndLMjZkR3ZVY0lrQzFBZjEyWHl4OHIKbXpSRVZTYzFSZVU5dm5VQTNSeE5RV1VYNTlSTlY0M3ZBelh0L0pWUnl2YTcyWXJnK0NGbjMvYUsxNGxoYkZ6NwpMeFp3TUxSTmJHbUNObE12MDB3WDZUTWk2ODNZMWRDdWZ2OGcxTURmL2hoOWQwNW5YTmxLNzEydE11bWNKMjJMCjJXY09rbnp2Q2FmbXBWRTFWczFWQ2RZUEtldC9QWXd3Snlaei92KzhFVHVBTE4zaEVwZXNxM0tIUEk4bjZ1dUgKRHFPcG8vd0w1bDEyajczK000OVBWSW03V0NaU2pXZUNFRFdHL3NMMFFYN2VVOU5jazFWYkNac1pYNG5Hb1lrbgpaR1NTSFpINTdrY01aQnlFVm5ZZXFrVXQ0L3NxUXVzQVoxMTFVOWNWb0lOdElQTkUvQUgxZGhxTWYxK2M5Y29RCjYrSk1Gb0JKeGdXa3luS3VicEVzWTkxRldyb1FKZFUvSFRzYTFvR0VTaFJ2VDU5VVdEZ3VZRXZIWlk4Q0F3RUEKQVFLQ0FnQVBUR1pQRFRsU004VlIvL3hSdkZrUzNUTm1LSkNPOUpHMkJYUGVZM1IzejUrTlhTdTBCb0craEk1aQpwVDVZUWtLZ2ErSi9GT0ZDVlBJRzdVQmVSNTE0Q3dVRGVMamtmci8zOXJFcjRNQmlMTkFyNUR3eVVUUEtGZUlOCnV2K0E4MWg5czBNTmpsck1ad3NibElsOFV2VjFZblpGb0J2c0Z0SThRTGZ3QTlaMzZ6dXRRNzRLR2h3TVBqaUMKMGgzK2xDeG9vcGdmd0JDWGx3d0dBeWZYVTRWMWQ5SFBpdktRQVFHakJDWDM0OWVTcEQxNDNLT21wQ2xmY01LQQp3QzU1bTZsbndCTUFIamlsaVo4RXBuNE8zUlEzSmxsVlpiaXl4RWdrZkE3TG1uNm9Ca3Jwc2VxdDVObThuRVhKCnBFbXhQcUl5Znc1WUNBMEhhNkM5WUhRN1RPRW9BbHBmWld4azAxSnpoVi9aK3FmVHM1YlMwQWNaTzFOVDRaeDgKWlF2eHQ0TDJINVcrK2R6RjhReTlidzQ2M3lKb1dydWxtNy9uQ3YvL1FpNGl0eHRnYyt0N2lwVXZzaUdTVktVWQpPelhCSXNWTUlnd0F6eUtTSEhPL21rMkEwVkgxaHB3emY2L0RzR2wxSjM4TU9pVGo4dEx1RWt3cFY4WGh5MnZwCkd0cXpsT21DS1hodlVDam9iZWlYSWJwSlIzeEM1NmliRjVadk0vQUdONzI5K0xKRFNwbHJtWVJRVHh1UTJWSE8KQWFXQ01SQWFBdUtCVnBxYTRjd25WRy9POEpkN2ZPSi9tMFlIN3FpRlJHREdvdVNOdHZJUUVtaXVkK3dRWjJ6dwpUcmFNVWk0SENtNEFPa0ZNVXBsRmt1ajA2ZHRqM2RIWUtPQkdMK25vaUp4WmJxb3kwUUtDQVFFQTFiZUl6WHh6CnRFRlp2OGRlOXljOWdCUUtNNUNIbHp6NUNMZXVkTitvemxxeDNCMW1PRStxbFkyaEd3RklIWVBJajFLYS83RlkKbExmNFpiUEJRMFhiNUo5VzQzSGIyTnEydXdRQ3ZiSXhVMW9zaGJVWlhZc2FUaE15azc2VzQ5YjU3UC9HdFE3NwpTbkVZTXNrTzRUQndyS3lBdVhDVHRtTk1Qa2J1NFBxT05PeVFQY3o3Yi92VEU1eERjMENMVS9oUXM3NWFHeCs1Citld2VjeEZNa0JKTVo2c2N5TzcySEdSNHZwTHduRXUvcU5uN2JmUElSaUx1T3BwTTdHNlUwQlBPL2todHJ5ZmQKV3U3MHJYZGJSdGRJUHlsQWxSOG9zczJqWWsrRHNPUnNESm9pbkk5WU1Va3dmdHdCNTRQbytGRGtGOHBzV202RQpSaklpenFBK0piWDlTd0tDQVFFQTA4Ly9oM0NabDg2M2xUZHNrU1JKRUZKc0RtdkZkUStzMWtlNUFwMjdnWTBXCmZJbEFGZFlRR3RORUVlTk9xS3EwdTFtS0lqWHFacWNTdU9DNzZIYTE5Tk9waHVoK1dwV0t2Ni9BTWtQSjE5SUIKQ3RqS0lkc2s0U2M3WG02MnNOV1pnQm5XT1Z3QVdzU0VzTHRac1NvWUJUVTJJS1pBOVJOWHhkSEQreGZ2SWJkNApZYngzTzk4WklNQzNlVFFiOW9jVHZab0RNWGdLaHRtTy9iMnlSeEVDSGpGRmxzYlhhc1RPeG5XOWZSVXJtdGVqCk9pdVlXaEZOM2R6dmpuVEdLY0xieWY0MWpHaUVUeFViUHVpei9ZMmk5NldCNVN6MW9zaGorRU1OaFhtRzZSYXUKQUIvelhwNldtSUJ2bDNpU0lzOGJRNkh3Qm1DTjc1R2VVVG1GUUlyaVRRS0NBUUVBbTkzWVN5MXA0VndNRGI5bApObElMRzM4Q0ZhdGlDRjR5cmpYd2FWSzVkWTVWeTFneHRmMzhSa2hkNkNrZUpGQjVsSFhGajVnVEo1dW84TnVSCnB2T3JOT2swNEhxb3dWWjZFSmtUT3JCY0l4TlFCMUFXS05BTHBrZUFDcHJreDFTQlFHVW0wZVFVUjYyRjNYd2YKZXdMdUdqRlJURzJiZlZpY1FZdFFLd3J4YmczZUFRU2ZtSU9MNVBDQmpPdlU4YS9YZzgvZlBZcjlBeFkrK3VMeAorTjB2bGlnSXZVN3lkYkNkRXpodGZVQU5qeU16cVhRemExdU1iWGNkaFEzOVFHaEIvZGhyRG1TL250Tko1YjEzCjk0bUpLbTkycDR0ckRrVEYxU3h5dWk5TjBqOFQ0U1QyU0RPOXg3ZkROOHRQdk5LYUYvUE01SU5YdXk1VGptajIKQ21EWlV3S0NBUUFOUVJYSFh1ZHRsWFR0ZEhOcHZiQ0l3ZStiRTJsZXd1VlkzMUlYZE5GWDhRRTROOHAzMDFaYwpwMTI2Rk5SR1A3QmhqTi9VOWpTOXliU2xOd0xyTUFxQTBJSHFQRUF6NE9tMnh3T3E0WTBPNFVoSmFubHpsdWYrCjR0cVhOU3hmY201UmtzeFIrSXpaSVRVQWJpalZxa0dvaWNUaVZDVDZjUVJzRDQxSStCMXhxYTV4eHo1YTA4SVoKeDVWemt5d3d5QkVYS3owSjZtNFdOQ1Q3Z2RSWEdCeGUwVXgrZStEZEFJWEQ2M2c1RElzVy9HbHRhVzcySytFSQpnaHZIZVUweExjMWRIWGd5V2hQMWN1ZXFqeHM4UVpHeUYzeENZQWJhOGRrM250S0l5S3NGaVBMSWRUZGdjMklQCkZ2SmtzeG5KN2RYUjdKODlkdXRLMDN6cHJrVEZYaXQ5QW9JQkFDcjhkb2ZCcFlFL1JuTlFwbVNET29DRm1sdTkKQlozN3h5K0puZ2FrQ2RSdHFyR1lDdkZMSnI2QnpGdXE0SHpsM0piTkRCM1BkYSs4Z2VNd2cxU1htTEhrRVFrTQpXV2ptNHpmU3hiTUtKamx3REdoeUlwSU9nQ2FQL1hyT2hxTGl4bnJ6UHFHZmM4R0FZTDE2Rm1PeGVqbVk5aERtCmNibkFqZlNwUjF1WEt2S2d6d1NLQ0VWdzc0VjJSRmRqQXBLVDl3bkpOQTZiWHQ5SXFkaS96d3BYbDQ0OVczdVMKNjRjVVpaK3luYnQ5QUlxbFNjMDdNRHl1TUtueExMbDFLeEJYenNxZlVsYWtlRGVoVmdGS05OOTNXQWJJc09ieAp1d1hTd0hXa1B6RGFHeE9wdzlSMHo2S2t2N25YZnBIYW1RWENBZEdsRjkyc1QwYW80Y3FuejFJSmJ2bz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K\"\n                },\n                {\n                    \"type\": \"certificate\",\n                    \"name\": \"cacert\",\n                    \"contents\": \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZjekNDQTF1Z0F3SUJBZ0lVVnNRZkFaTW4vazNRTU9nc0RuVEdUaU9PbGJ3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1NURUxNQWtHQTFVRUJoTUNTVlF4RFRBTEJnTlZCQWdNQkVGemRHa3hFVEFQQmdOVkJBb01DRlJsYzNRZwpUR0ZpTVJnd0ZnWURWUVFEREE5MmJTMWliR0Z1YXk1bVppNXNZVzR3SGhjTk1qTXdOakE0TURrMU5EQTRXaGNOCk1qUXdOakEzTURrMU5EQTRXakJKTVFzd0NRWURWUVFHRXdKSlZERU5NQXNHQTFVRUNBd0VRWE4wYVRFUk1BOEcKQTFVRUNnd0lWR1Z6ZENCTVlXSXhHREFXQmdOVkJBTU1EM1p0TFdKc1lXNXJMbVptTG14aGJqQ0NBaUl3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLMlQwWXpkcjB0dWQzaVJRNGNzaGNhRVJTRzVjTDE2CkhRblhoYWw4emlUL1VRQUNIUGdzZDYwcWlEaldvQTJXb0lGWFFpUHkzOG1vZGtWRlR4Qmt5U2VldndOOFJiLzEKOFhaMS8yS1RnVmRDcHkvNm11WE15bXZYODJad05CVkV3QnoxUk5kbklUSk44cVh3a0d4bHozbDBib1loRkFyUQpNdmkxcW1RaHpDa2Zpb041MVkrYlBXOXpTQlFQdXNrcXJYYzRqTTJ0VENNQ2pTcFlvd1hXM1ppRmc5WEJ1Z09aCjFmdWd1Zmw4K1FJYzNZSEFoL1Z1NloraXFEOGxQeGRKODlBeDZaazVtOGdkVG9JdUhBbUNWaHFpUXBGRjkzSTgKbkYrSnRuYnBaNTRJUTZBbWYrYiswakMxdmY4Kzg0WUppaEVzWExyaGMxZTRTZ2dwdzEvcWpDb21QblhGVjEzUwpsUG5kVlhVR0taa1ZKdXdZTjJyZElmd3YrdCs5MGhwUVBmNmFBTjRCamRxOXdkdkQzSXVnS2JYZG5CQ0FUTEY4ClYyRTFTSE9VZGdRY3duK1d1WDVVOGdPa3B2b2VFN0g1REJ6Rks1WTZ2SHZlaTRlNkp3RTRDK3FJL1BmbTgreTEKNEpsOFBSOW5JQmdGQ3hrZWpwa2tRQ0I5U0dvMVZidzZhWmdZd0VQNHh6YXFYYXV3L3F4c0oxNUkrRTBndEs1OApuWUtkM0hqelk5Slh6V0NVNTdXbmc2SzNvTTIzNXpyRzJnNm1FaHQ4SStDckVMUFNuZURjZU8zVlJkc2dlblBCCis4U1JxVU8vWG9LWHNEU3I5amoxdWluVzYwTG5MZ0Zmc3JQeGlQVlZlMFh1TFZESlhCSlNoRDZDeGRyMnBSOGQKS25SRDZrTFpZZEtMQWdNQkFBR2pVekJSTUIwR0ExVWREZ1FXQkJRUzZnS2pMK3VFc0dXeXVjbTZyb0xVaXpqVwpWREFmQmdOVkhTTUVHREFXZ0JRUzZnS2pMK3VFc0dXeXVjbTZyb0xVaXpqV1ZEQVBCZ05WSFJNQkFmOEVCVEFECkFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUJad3B4Z2Z4N2thZFhvRHNyT1hUVXJ6dEFPMkFQRVJNaTAKaTkyNk9DTGFPbVVYZW1uKytXSUU1K2tUSE0wcS8vbUZCTURzSmdZSFVLUlNvRGNsNmh4TnVFNUNzS2trRVFTSgpMTHZrWlB0S2J5NGlxMitLZ1JtdVZxbXJNVTBYQzZMZDl3WmttL2huUjNtT3V6bko4MGZmV1JDQ0xGWDEwY2EzCnc5TGM1d1JLTFBZZXQvcEs5SitOYWN3TFJRYTczVFovMUpQNW9BU3czVjNoYkxlLy9UeWpnOURqUlZGY3FYWnEKWWs2Mm5qSkhZVzh3WmlhZzc0QXU4dHE5OG5KandBV1ROMFV5L2w1Q2VpWnV5bzZlU0RHVDNJNm1BdGU1VXBvWAppNXBkYlZ6VDdOZC9IOEwwZHZNdVZ2N0FmakZlcU91cUZNNkkzTnlvbStLWENxNmJQdGxBWEkzeVFZc0t4ZlRkCkw3SnRaTmx6MGJ6eHJhcHI4RmpYcjhML1ZkeHQza00xMnJwb2kzL3hsckR6Q2Q2b2YrQ1MxelBocUdpOUhvcUoKZEU5VGhYMklTdkd2akVSYzVVNFRsNjJBNHNyeGJQbUt0eWx3dGNGVEJacUJiRGY3ZjBBc2cveWhndXdTcktsQQpBNkRWVXVCRFErdGpwZ0N0b0ZlOEhLVDJ6UFVlaEQ2ZjVNQkhmU2ZUZ1crTlhFSXNvVDNsampjY1hsYXhPcFJWCkNQNWxCczNmekxyYnBxbUlLaWZhdWlTNWM4TzlSUjhjQTVzeWlBOTBmbmJIdDlmdGxpRG9jcFRzNUtrbjk2NkIKZUxMM1dXVldCYUtvanJzY1RkVXJoalNnVVBmam5FTXpnVzR2eEc3d3BVNHR2ME4yaEtHUWc0bVhhcDV0SU5Pcwp4WktnZXRHUldnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\"\n                }\n            ]\n        }\n    },\n    \"declaration\": {\n        \"http\": {\n            \"servers\": [\n                {\n                    \"name\": \"Online boutique HTTPS\",\n                    \"names\": [\n                        \"vm-blank.ff.lan\"\n                    ],\n                    \"resolver\": \"192.168.1.13\",\n                    \"listen\": {\n                        \"address\": \"0.0.0.0:443\",\n                        \"http2\": true,\n                        \"tls\": {\n                            \"certificate\": \"server_cert\",\n                            \"key\": \"server_key\",\n                            \"ciphers\": \"DEFAULT\",\n                            \"protocols\": [\n                                \"TLSv1.2\",\n                                \"TLSv1.3\"\n                            ],\n                            \"mtls\": {\n                                \"enabled\": \"on\",\n                                \"trusted_ca_certificates\": \"cacert\"\n                            },\n                            \"ocsp\": {\n                                \"enabled\": \"on\",\n                                \"responder\": \"http://ocsp.mylab.lan\"\n                            },\n                            \"stapling\": {\n                                \"enabled\": true,\n                                \"verify\": true,\n                                \"responder\": \"http://ocsp.mylab.lan\"\n                            }\n                        }\n                    },\n                    \"log\": {\n                        \"access\": \"/var/log/nginx/vm-blank.ff.lan_access_log\",\n                        \"error\": \"/var/log/nginx/vm-blank.ff.lan_error_log\"\n                    },\n                    \"locations\": [\n                        {\n                            \"uri\": \"/\",\n                            \"urimatch\": \"prefix\",\n                            \"upstream\": \"http://origin_server\"\n                        }\n                    ]\n                }\n            ],\n            \"upstreams\": [\n                {\n                    \"name\": \"origin_server\",\n                    \"origin\": [\n                        {\n                            \"server\": \"192.168.1.200:80\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{ncg_host}}:{{ncg_port}}/v2/config",
									"protocol": "http",
									"host": [
										"{{ncg_host}}"
									],
									"port": "{{ncg_port}}",
									"path": [
										"v2",
										"config"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ncg_host",
			"value": "127.0.0.1",
			"type": "default"
		},
		{
			"key": "ncg_port",
			"value": "5000",
			"type": "default"
		},
		{
			"key": "github_root",
			"value": "https://raw.githubusercontent.com/fabriziofiorucci/NGINX-Config-Generator/main/contrib/sample-source-of-truth/configs/",
			"type": "string"
		},
		{
			"key": "configUid",
			"value": ""
		},
		{
			"key": "nim_host",
			"value": "https://ubuntu.ff.lan",
			"type": "string"
		},
		{
			"key": "nim_username",
			"value": "admin",
			"type": "string"
		},
		{
			"key": "nim_password",
			"value": "admin",
			"type": "string"
		},
		{
			"key": "nim_instancegroup",
			"value": "declarativeAPITest",
			"type": "string"
		},
		{
			"key": "nim_synctime",
			"value": "10",
			"type": "string"
		},
		{
			"key": "github_gitops_root",
			"value": "https://raw.githubusercontent.com/fabriziofiorucci/NGINX-Declarative-API/main/contrib/gitops-examples",
			"type": "string"
		}
	]
}