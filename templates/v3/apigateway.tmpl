{% if declaration.servers %}
    {# --- OpenAPI schema contains server details --- #}
    {% if declaration.servers[0].url.lower().startswith('http://') or declaration.servers[0].url.lower().startswith('https://') %}
        {# --- OpenAPI schema contains a full server URL --- #}
        {% set destination_server = declaration.servers[0].url %}
    {% else %}
        {# --- OpenAPI schema contains a server URI --- #}
        {% set destination_server = declaration.location.apigateway.api_gateway.server_url + declaration.servers[0].url %}
    {% endif %}
{% else %}
    {# --- OpenAPI schema contains no server details --- #}
    {% set destination_server = declaration.location.apigateway.api_gateway.server_url %}
{% endif %}

# API Gateway: {{ declaration.info.title }} {{ declaration.info.version }}
# OpenAPI version: {{ declaration.version }}
# Base URI: {{ declaration.location.uri }}
# Strip base URI: {{ declaration.location.apigateway.api_gateway.strip_uri }}
# Destination server: {{ destination_server }}

{% if declaration.paths -%}
{% for path in declaration.paths %}
location ~ {{ declaration.location.uri }}{{ path.path | regex_replace('{(.*?)}','(.*)') }} {
    {% for method in path.methods -%}
    # {{ method.method|upper }} - operationId: {{ method.details.operationId }}
    {% endfor -%}
    {% set method_names = path.methods|map(attribute='method')|list %}

    {% if declaration.location.apigateway.log.access %}access_log {{ declaration.location.apigateway.log.access }} main;{% endif %}

    {% if declaration.location.apigateway.log.error %}error_log {{ declaration.location.apigateway.log.error }};{% endif %}


    limit_except {{ method_names|join(' ')|upper }} { deny all; }

    {# --- Rate limiting --- #}
    {%- if declaration.location.apigateway.rate_limit -%}
    {%- if declaration.location.apigateway.rate_limit.profile %}limit_req zone={{ declaration.location.apigateway.rate_limit.profile }}{% if declaration.location.apigateway.rate_limit.burst %} burst={{ declaration.location.apigateway.rate_limit.burst }}{% endif %}{% if declaration.location.apigateway.rate_limit.delay == 0 %} nodelay;{% else %} delay={{ declaration.location.apigateway.rate_limit.delay }};{% endif %}{% endif %}

    {% if declaration.location.apigateway.rate_limit.httpcode %}limit_req_status {{ declaration.location.apigateway.rate_limit.httpcode }};{% endif %}
    {% endif %}


    {% if declaration.location.apigateway.api_gateway.strip_uri -%}
    rewrite ^{{ declaration.location.uri }}/(.*)$ /$1 break;
    {% endif %}

    {% if declaration.location.apigateway.api_gateway.server_url -%}
    proxy_set_header Host {{ declaration.location.apigateway.api_gateway.server_url.split('://')[1].split('/')[0] }};
    {% endif %}

    proxy_pass {{ destination_server }}$uri;
}

{% endfor %}

{% if declaration.location.apigateway.developer_portal.enabled == True -%}
location = {{ declaration.location.uri }}{{ declaration.location.apigateway.developer_portal.uri }} {
    rewrite ^{{ declaration.location.uri }}/(.*)$ /$1 break;
    root {{ ncgconfig.nms.devportal_dir }};
}
{% endif %}
{% endif %}
