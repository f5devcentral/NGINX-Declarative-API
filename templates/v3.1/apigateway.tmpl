{% if declaration.servers %}
    {# --- OpenAPI schema contains server details --- #}
    {% if declaration.servers[0].url.lower().startswith('http://') or declaration.servers[0].url.lower().startswith('https://') %}
        {# --- OpenAPI schema contains a full server URL --- #}
        {% set destination_server = declaration.servers[0].url %}
    {% else %}
        {# --- OpenAPI schema contains a server URI --- #}
        {% set destination_server = declaration.location.apigateway.api_gateway.server_url + declaration.servers[0].url %}
    {% endif %}
{% else %}
    {# --- OpenAPI schema contains no server details --- #}
    {% set destination_server = declaration.location.apigateway.api_gateway.server_url %}
{% endif %}

# API Gateway: {{ declaration.info.title }} {{ declaration.info.version }}
# OpenAPI version: {{ declaration.version }}
# Base URI: {{ declaration.location.uri }}
# Strip base URI: {{ declaration.location.apigateway.api_gateway.strip_uri }}
# Destination server: {{ destination_server }}

{% if declaration.paths -%}
{% for path in declaration.paths %}
location {% if '{' not in path.path %}={% else %}~{% endif %} {{ declaration.location.uri }}{{ path.path | regex_replace('{(.*?)}','(.*)') }} {
    {% for method in path.methods -%}
    # {{ method.method|upper }} - operationId: {{ method.details.operationId }}
    {% endfor -%}
    {% set method_names = path.methods|map(attribute='method')|list %}

    {% if declaration.location.apigateway.log.access %}access_log {{ declaration.location.apigateway.log.access }} main;{% endif %}

    {% if declaration.location.apigateway.log.error %}error_log {{ declaration.location.apigateway.log.error }};{% endif %}


    limit_except {{ method_names|join(' ')|upper }} { deny all; }

    {# --- Rate limiting start --- #}
    {%- for rl in declaration.location.apigateway.rate_limit -%}
    {%- set enforceRL = namespace(toBeEnforced = False) -%}
    {%- if rl.enforceOnPaths == False -%}
    {%- set enforceRL.toBeEnforced = True -%}
    {%- endif -%}
    {%- for rlPath in rl.paths -%}
    {%- if path.path == rlPath -%}
    {%- if rl.enforceOnPaths == True -%}
    {%- set enforceRL.toBeEnforced = True -%}
    {%- else -%}
    {%- set enforceRL.toBeEnforced = False -%}
    {%- endif -%}
    {%- endif -%}
    {%- endfor -%}

    {%- if enforceRL.toBeEnforced == True -%}
    {%- if rl.profile %}limit_req zone={{ rl.profile }}{% if rl.burst %} burst={{ rl.burst }}{% endif %}{% if rl.delay == 0 %} nodelay;{% else %} delay={{ rl.delay }};{% endif %}{% endif %}

    {% if rl.httpcode %}limit_req_status {{ rl.httpcode }};{% endif %}
    {%- endif -%}
    {%- endfor -%}

    {# --- Rate limiting end --- #}


    {# --- Authentication start --- #}
    {%- if declaration.location.apigateway.authentication -%}
    {%- set enforceAuth = namespace(toBeEnforced = False) -%}
    {%- if declaration.location.apigateway.authentication.enforceOnPaths == False -%}
    {%- set enforceAuth.toBeEnforced = True -%}
    {%- endif -%}
    {%- for authPath in declaration.location.apigateway.authentication.paths -%}
    {%- if path.path == authPath -%}
    {%- if declaration.location.apigateway.authentication.enforceOnPaths == True -%}
    {%- set enforceAuth.toBeEnforced = True -%}
    {%- else -%}
    {%- set enforceRL.toBeEnforced = False -%}
    {%- endif -%}
    {%- endif -%}
    {%- endfor -%}

    {%- if enforceAuth.toBeEnforced == True -%}
    auth_jwt "{{ declaration.location.apigateway.authentication.jwt.realm }}";
    auth_jwt_key_request {{ declaration.location.uri }}/_jwks_uri;
    auth_jwt_key_cache {{ declaration.location.apigateway.authentication.jwt.cachetime }};
    {%- endif -%}
    {%- endif %}

    {# --- Authentication end --- #}

    {% if declaration.location.apigateway.api_gateway.strip_uri -%}
    rewrite ^{{ declaration.location.uri }}/(.*)$ /$1 break;
    {% endif %}

    {% if declaration.location.apigateway.api_gateway.server_url -%}
    proxy_set_header Host {{ declaration.location.apigateway.api_gateway.server_url.split('://')[1].split('/')[0] }};
    {% endif -%}

    proxy_pass {{ destination_server }}$uri;
}

{% endfor %}

{%- if declaration.location.apigateway.authentication -%}
location = {{ declaration.location.uri }}/_jwks_uri {
    internal;
    #proxy_cache jwk;

    {% if declaration.location.apigateway.authentication.jwt.key.startswith('http://') or declaration.location.apigateway.authentication.jwt.key.startswith('https://') -%}
    proxy_method GET;
    proxy_pass {{ declaration.location.apigateway.authentication.jwt.key }};
    {%- else -%}
    return 200 '{{declaration.location.apigateway.authentication.jwt.key }}';
    {% endif %}

}
{% endif %}

{% if declaration.location.apigateway.developer_portal.enabled == True -%}
location = {{ declaration.location.uri }}{{ declaration.location.apigateway.developer_portal.uri }} {
    rewrite ^{{ declaration.location.uri }}/(.*)$ /$1 break;
    root {{ ncgconfig.nms.devportal_dir }};
}
{% endif %}
{% endif %}
